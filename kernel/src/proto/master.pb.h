// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: master.proto

#ifndef PROTOBUF_master_2eproto__INCLUDED
#define PROTOBUF_master_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
#include "dos.pb.h"
// @@protoc_insertion_point(includes)

namespace dos {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_master_2eproto();
void protobuf_AssignDesc_master_2eproto();
void protobuf_ShutdownFile_master_2eproto();

class HeartBeatRequest;
class HeartBeatResponse;
class SubmitJobRequest;
class SubmitJobResponse;
class Condition;
class GetScaleUpPodRequest;
class PodOverview;
class GetScaleUpPodResponse;
class AgentOverview;
class AgentVersion;
class SyncAgentInfoRequest;
class SyncAgentInfoResponse;
class Propose;
class ScaleUpProposeRequest;
class ScaleUpProposeResponse;
class JobOverview;
class GetJobRequest;
class GetJobResponse;
class KillJobRequest;
class KillJobResponse;

// ===================================================================

class HeartBeatRequest : public ::google::protobuf::Message {
 public:
  HeartBeatRequest();
  virtual ~HeartBeatRequest();

  HeartBeatRequest(const HeartBeatRequest& from);

  inline HeartBeatRequest& operator=(const HeartBeatRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeartBeatRequest& default_instance();

  void Swap(HeartBeatRequest* other);

  // implements Message ----------------------------------------------

  HeartBeatRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeartBeatRequest& from);
  void MergeFrom(const HeartBeatRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string hostname = 1;
  inline bool has_hostname() const;
  inline void clear_hostname();
  static const int kHostnameFieldNumber = 1;
  inline const ::std::string& hostname() const;
  inline void set_hostname(const ::std::string& value);
  inline void set_hostname(const char* value);
  inline void set_hostname(const char* value, size_t size);
  inline ::std::string* mutable_hostname();
  inline ::std::string* release_hostname();
  inline void set_allocated_hostname(::std::string* hostname);

  // optional string endpoint = 2;
  inline bool has_endpoint() const;
  inline void clear_endpoint();
  static const int kEndpointFieldNumber = 2;
  inline const ::std::string& endpoint() const;
  inline void set_endpoint(const ::std::string& value);
  inline void set_endpoint(const char* value);
  inline void set_endpoint(const char* value, size_t size);
  inline ::std::string* mutable_endpoint();
  inline ::std::string* release_endpoint();
  inline void set_allocated_endpoint(::std::string* endpoint);

  // @@protoc_insertion_point(class_scope:dos.HeartBeatRequest)
 private:
  inline void set_has_hostname();
  inline void clear_has_hostname();
  inline void set_has_endpoint();
  inline void clear_has_endpoint();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* hostname_;
  ::std::string* endpoint_;
  friend void  protobuf_AddDesc_master_2eproto();
  friend void protobuf_AssignDesc_master_2eproto();
  friend void protobuf_ShutdownFile_master_2eproto();

  void InitAsDefaultInstance();
  static HeartBeatRequest* default_instance_;
};
// -------------------------------------------------------------------

class HeartBeatResponse : public ::google::protobuf::Message {
 public:
  HeartBeatResponse();
  virtual ~HeartBeatResponse();

  HeartBeatResponse(const HeartBeatResponse& from);

  inline HeartBeatResponse& operator=(const HeartBeatResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeartBeatResponse& default_instance();

  void Swap(HeartBeatResponse* other);

  // implements Message ----------------------------------------------

  HeartBeatResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeartBeatResponse& from);
  void MergeFrom(const HeartBeatResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:dos.HeartBeatResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_master_2eproto();
  friend void protobuf_AssignDesc_master_2eproto();
  friend void protobuf_ShutdownFile_master_2eproto();

  void InitAsDefaultInstance();
  static HeartBeatResponse* default_instance_;
};
// -------------------------------------------------------------------

class SubmitJobRequest : public ::google::protobuf::Message {
 public:
  SubmitJobRequest();
  virtual ~SubmitJobRequest();

  SubmitJobRequest(const SubmitJobRequest& from);

  inline SubmitJobRequest& operator=(const SubmitJobRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SubmitJobRequest& default_instance();

  void Swap(SubmitJobRequest* other);

  // implements Message ----------------------------------------------

  SubmitJobRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SubmitJobRequest& from);
  void MergeFrom(const SubmitJobRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string user_name = 1;
  inline bool has_user_name() const;
  inline void clear_user_name();
  static const int kUserNameFieldNumber = 1;
  inline const ::std::string& user_name() const;
  inline void set_user_name(const ::std::string& value);
  inline void set_user_name(const char* value);
  inline void set_user_name(const char* value, size_t size);
  inline ::std::string* mutable_user_name();
  inline ::std::string* release_user_name();
  inline void set_allocated_user_name(::std::string* user_name);

  // optional .dos.JobSpec job = 2;
  inline bool has_job() const;
  inline void clear_job();
  static const int kJobFieldNumber = 2;
  inline const ::dos::JobSpec& job() const;
  inline ::dos::JobSpec* mutable_job();
  inline ::dos::JobSpec* release_job();
  inline void set_allocated_job(::dos::JobSpec* job);

  // @@protoc_insertion_point(class_scope:dos.SubmitJobRequest)
 private:
  inline void set_has_user_name();
  inline void clear_has_user_name();
  inline void set_has_job();
  inline void clear_has_job();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* user_name_;
  ::dos::JobSpec* job_;
  friend void  protobuf_AddDesc_master_2eproto();
  friend void protobuf_AssignDesc_master_2eproto();
  friend void protobuf_ShutdownFile_master_2eproto();

  void InitAsDefaultInstance();
  static SubmitJobRequest* default_instance_;
};
// -------------------------------------------------------------------

class SubmitJobResponse : public ::google::protobuf::Message {
 public:
  SubmitJobResponse();
  virtual ~SubmitJobResponse();

  SubmitJobResponse(const SubmitJobResponse& from);

  inline SubmitJobResponse& operator=(const SubmitJobResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SubmitJobResponse& default_instance();

  void Swap(SubmitJobResponse* other);

  // implements Message ----------------------------------------------

  SubmitJobResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SubmitJobResponse& from);
  void MergeFrom(const SubmitJobResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .dos.RpcStatus status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::dos::RpcStatus status() const;
  inline void set_status(::dos::RpcStatus value);

  // @@protoc_insertion_point(class_scope:dos.SubmitJobResponse)
 private:
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int status_;
  friend void  protobuf_AddDesc_master_2eproto();
  friend void protobuf_AssignDesc_master_2eproto();
  friend void protobuf_ShutdownFile_master_2eproto();

  void InitAsDefaultInstance();
  static SubmitJobResponse* default_instance_;
};
// -------------------------------------------------------------------

class Condition : public ::google::protobuf::Message {
 public:
  Condition();
  virtual ~Condition();

  Condition(const Condition& from);

  inline Condition& operator=(const Condition& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Condition& default_instance();

  void Swap(Condition* other);

  // implements Message ----------------------------------------------

  Condition* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Condition& from);
  void MergeFrom(const Condition& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .dos.PodType types = 1;
  inline int types_size() const;
  inline void clear_types();
  static const int kTypesFieldNumber = 1;
  inline ::dos::PodType types(int index) const;
  inline void set_types(int index, ::dos::PodType value);
  inline void add_types(::dos::PodType value);
  inline const ::google::protobuf::RepeatedField<int>& types() const;
  inline ::google::protobuf::RepeatedField<int>* mutable_types();

  // optional string job_name_contain = 2;
  inline bool has_job_name_contain() const;
  inline void clear_job_name_contain();
  static const int kJobNameContainFieldNumber = 2;
  inline const ::std::string& job_name_contain() const;
  inline void set_job_name_contain(const ::std::string& value);
  inline void set_job_name_contain(const char* value);
  inline void set_job_name_contain(const char* value, size_t size);
  inline ::std::string* mutable_job_name_contain();
  inline ::std::string* release_job_name_contain();
  inline void set_allocated_job_name_contain(::std::string* job_name_contain);

  // @@protoc_insertion_point(class_scope:dos.Condition)
 private:
  inline void set_has_job_name_contain();
  inline void clear_has_job_name_contain();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField<int> types_;
  ::std::string* job_name_contain_;
  friend void  protobuf_AddDesc_master_2eproto();
  friend void protobuf_AssignDesc_master_2eproto();
  friend void protobuf_ShutdownFile_master_2eproto();

  void InitAsDefaultInstance();
  static Condition* default_instance_;
};
// -------------------------------------------------------------------

class GetScaleUpPodRequest : public ::google::protobuf::Message {
 public:
  GetScaleUpPodRequest();
  virtual ~GetScaleUpPodRequest();

  GetScaleUpPodRequest(const GetScaleUpPodRequest& from);

  inline GetScaleUpPodRequest& operator=(const GetScaleUpPodRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetScaleUpPodRequest& default_instance();

  void Swap(GetScaleUpPodRequest* other);

  // implements Message ----------------------------------------------

  GetScaleUpPodRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetScaleUpPodRequest& from);
  void MergeFrom(const GetScaleUpPodRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .dos.Condition condition = 1;
  inline bool has_condition() const;
  inline void clear_condition();
  static const int kConditionFieldNumber = 1;
  inline const ::dos::Condition& condition() const;
  inline ::dos::Condition* mutable_condition();
  inline ::dos::Condition* release_condition();
  inline void set_allocated_condition(::dos::Condition* condition);

  // @@protoc_insertion_point(class_scope:dos.GetScaleUpPodRequest)
 private:
  inline void set_has_condition();
  inline void clear_has_condition();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::dos::Condition* condition_;
  friend void  protobuf_AddDesc_master_2eproto();
  friend void protobuf_AssignDesc_master_2eproto();
  friend void protobuf_ShutdownFile_master_2eproto();

  void InitAsDefaultInstance();
  static GetScaleUpPodRequest* default_instance_;
};
// -------------------------------------------------------------------

class PodOverview : public ::google::protobuf::Message {
 public:
  PodOverview();
  virtual ~PodOverview();

  PodOverview(const PodOverview& from);

  inline PodOverview& operator=(const PodOverview& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PodOverview& default_instance();

  void Swap(PodOverview* other);

  // implements Message ----------------------------------------------

  PodOverview* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PodOverview& from);
  void MergeFrom(const PodOverview& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional .dos.Resource requirement = 2;
  inline bool has_requirement() const;
  inline void clear_requirement();
  static const int kRequirementFieldNumber = 2;
  inline const ::dos::Resource& requirement() const;
  inline ::dos::Resource* mutable_requirement();
  inline ::dos::Resource* release_requirement();
  inline void set_allocated_requirement(::dos::Resource* requirement);

  // optional .dos.PodType type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline ::dos::PodType type() const;
  inline void set_type(::dos::PodType value);

  // optional string job_name = 4;
  inline bool has_job_name() const;
  inline void clear_job_name();
  static const int kJobNameFieldNumber = 4;
  inline const ::std::string& job_name() const;
  inline void set_job_name(const ::std::string& value);
  inline void set_job_name(const char* value);
  inline void set_job_name(const char* value, size_t size);
  inline ::std::string* mutable_job_name();
  inline ::std::string* release_job_name();
  inline void set_allocated_job_name(::std::string* job_name);

  // @@protoc_insertion_point(class_scope:dos.PodOverview)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_requirement();
  inline void clear_has_requirement();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_job_name();
  inline void clear_has_job_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::dos::Resource* requirement_;
  ::std::string* job_name_;
  int type_;
  friend void  protobuf_AddDesc_master_2eproto();
  friend void protobuf_AssignDesc_master_2eproto();
  friend void protobuf_ShutdownFile_master_2eproto();

  void InitAsDefaultInstance();
  static PodOverview* default_instance_;
};
// -------------------------------------------------------------------

class GetScaleUpPodResponse : public ::google::protobuf::Message {
 public:
  GetScaleUpPodResponse();
  virtual ~GetScaleUpPodResponse();

  GetScaleUpPodResponse(const GetScaleUpPodResponse& from);

  inline GetScaleUpPodResponse& operator=(const GetScaleUpPodResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetScaleUpPodResponse& default_instance();

  void Swap(GetScaleUpPodResponse* other);

  // implements Message ----------------------------------------------

  GetScaleUpPodResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetScaleUpPodResponse& from);
  void MergeFrom(const GetScaleUpPodResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .dos.PodOverview pods = 1;
  inline int pods_size() const;
  inline void clear_pods();
  static const int kPodsFieldNumber = 1;
  inline const ::dos::PodOverview& pods(int index) const;
  inline ::dos::PodOverview* mutable_pods(int index);
  inline ::dos::PodOverview* add_pods();
  inline const ::google::protobuf::RepeatedPtrField< ::dos::PodOverview >&
      pods() const;
  inline ::google::protobuf::RepeatedPtrField< ::dos::PodOverview >*
      mutable_pods();

  // optional .dos.RpcStatus status = 2;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 2;
  inline ::dos::RpcStatus status() const;
  inline void set_status(::dos::RpcStatus value);

  // @@protoc_insertion_point(class_scope:dos.GetScaleUpPodResponse)
 private:
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::dos::PodOverview > pods_;
  int status_;
  friend void  protobuf_AddDesc_master_2eproto();
  friend void protobuf_AssignDesc_master_2eproto();
  friend void protobuf_ShutdownFile_master_2eproto();

  void InitAsDefaultInstance();
  static GetScaleUpPodResponse* default_instance_;
};
// -------------------------------------------------------------------

class AgentOverview : public ::google::protobuf::Message {
 public:
  AgentOverview();
  virtual ~AgentOverview();

  AgentOverview(const AgentOverview& from);

  inline AgentOverview& operator=(const AgentOverview& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AgentOverview& default_instance();

  void Swap(AgentOverview* other);

  // implements Message ----------------------------------------------

  AgentOverview* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AgentOverview& from);
  void MergeFrom(const AgentOverview& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string endpoint = 1;
  inline bool has_endpoint() const;
  inline void clear_endpoint();
  static const int kEndpointFieldNumber = 1;
  inline const ::std::string& endpoint() const;
  inline void set_endpoint(const ::std::string& value);
  inline void set_endpoint(const char* value);
  inline void set_endpoint(const char* value, size_t size);
  inline ::std::string* mutable_endpoint();
  inline ::std::string* release_endpoint();
  inline void set_allocated_endpoint(::std::string* endpoint);

  // optional .dos.Resource resource = 2;
  inline bool has_resource() const;
  inline void clear_resource();
  static const int kResourceFieldNumber = 2;
  inline const ::dos::Resource& resource() const;
  inline ::dos::Resource* mutable_resource();
  inline ::dos::Resource* release_resource();
  inline void set_allocated_resource(::dos::Resource* resource);

  // repeated .dos.PodOverview pods = 3;
  inline int pods_size() const;
  inline void clear_pods();
  static const int kPodsFieldNumber = 3;
  inline const ::dos::PodOverview& pods(int index) const;
  inline ::dos::PodOverview* mutable_pods(int index);
  inline ::dos::PodOverview* add_pods();
  inline const ::google::protobuf::RepeatedPtrField< ::dos::PodOverview >&
      pods() const;
  inline ::google::protobuf::RepeatedPtrField< ::dos::PodOverview >*
      mutable_pods();

  // optional int32 version = 4;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 4;
  inline ::google::protobuf::int32 version() const;
  inline void set_version(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:dos.AgentOverview)
 private:
  inline void set_has_endpoint();
  inline void clear_has_endpoint();
  inline void set_has_resource();
  inline void clear_has_resource();
  inline void set_has_version();
  inline void clear_has_version();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* endpoint_;
  ::dos::Resource* resource_;
  ::google::protobuf::RepeatedPtrField< ::dos::PodOverview > pods_;
  ::google::protobuf::int32 version_;
  friend void  protobuf_AddDesc_master_2eproto();
  friend void protobuf_AssignDesc_master_2eproto();
  friend void protobuf_ShutdownFile_master_2eproto();

  void InitAsDefaultInstance();
  static AgentOverview* default_instance_;
};
// -------------------------------------------------------------------

class AgentVersion : public ::google::protobuf::Message {
 public:
  AgentVersion();
  virtual ~AgentVersion();

  AgentVersion(const AgentVersion& from);

  inline AgentVersion& operator=(const AgentVersion& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AgentVersion& default_instance();

  void Swap(AgentVersion* other);

  // implements Message ----------------------------------------------

  AgentVersion* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AgentVersion& from);
  void MergeFrom(const AgentVersion& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string endpoint = 1;
  inline bool has_endpoint() const;
  inline void clear_endpoint();
  static const int kEndpointFieldNumber = 1;
  inline const ::std::string& endpoint() const;
  inline void set_endpoint(const ::std::string& value);
  inline void set_endpoint(const char* value);
  inline void set_endpoint(const char* value, size_t size);
  inline ::std::string* mutable_endpoint();
  inline ::std::string* release_endpoint();
  inline void set_allocated_endpoint(::std::string* endpoint);

  // optional int32 version = 2;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 2;
  inline ::google::protobuf::int32 version() const;
  inline void set_version(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:dos.AgentVersion)
 private:
  inline void set_has_endpoint();
  inline void clear_has_endpoint();
  inline void set_has_version();
  inline void clear_has_version();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* endpoint_;
  ::google::protobuf::int32 version_;
  friend void  protobuf_AddDesc_master_2eproto();
  friend void protobuf_AssignDesc_master_2eproto();
  friend void protobuf_ShutdownFile_master_2eproto();

  void InitAsDefaultInstance();
  static AgentVersion* default_instance_;
};
// -------------------------------------------------------------------

class SyncAgentInfoRequest : public ::google::protobuf::Message {
 public:
  SyncAgentInfoRequest();
  virtual ~SyncAgentInfoRequest();

  SyncAgentInfoRequest(const SyncAgentInfoRequest& from);

  inline SyncAgentInfoRequest& operator=(const SyncAgentInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncAgentInfoRequest& default_instance();

  void Swap(SyncAgentInfoRequest* other);

  // implements Message ----------------------------------------------

  SyncAgentInfoRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SyncAgentInfoRequest& from);
  void MergeFrom(const SyncAgentInfoRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .dos.AgentVersion versions = 1;
  inline int versions_size() const;
  inline void clear_versions();
  static const int kVersionsFieldNumber = 1;
  inline const ::dos::AgentVersion& versions(int index) const;
  inline ::dos::AgentVersion* mutable_versions(int index);
  inline ::dos::AgentVersion* add_versions();
  inline const ::google::protobuf::RepeatedPtrField< ::dos::AgentVersion >&
      versions() const;
  inline ::google::protobuf::RepeatedPtrField< ::dos::AgentVersion >*
      mutable_versions();

  // @@protoc_insertion_point(class_scope:dos.SyncAgentInfoRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::dos::AgentVersion > versions_;
  friend void  protobuf_AddDesc_master_2eproto();
  friend void protobuf_AssignDesc_master_2eproto();
  friend void protobuf_ShutdownFile_master_2eproto();

  void InitAsDefaultInstance();
  static SyncAgentInfoRequest* default_instance_;
};
// -------------------------------------------------------------------

class SyncAgentInfoResponse : public ::google::protobuf::Message {
 public:
  SyncAgentInfoResponse();
  virtual ~SyncAgentInfoResponse();

  SyncAgentInfoResponse(const SyncAgentInfoResponse& from);

  inline SyncAgentInfoResponse& operator=(const SyncAgentInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncAgentInfoResponse& default_instance();

  void Swap(SyncAgentInfoResponse* other);

  // implements Message ----------------------------------------------

  SyncAgentInfoResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SyncAgentInfoResponse& from);
  void MergeFrom(const SyncAgentInfoResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string diff_del = 1;
  inline int diff_del_size() const;
  inline void clear_diff_del();
  static const int kDiffDelFieldNumber = 1;
  inline const ::std::string& diff_del(int index) const;
  inline ::std::string* mutable_diff_del(int index);
  inline void set_diff_del(int index, const ::std::string& value);
  inline void set_diff_del(int index, const char* value);
  inline void set_diff_del(int index, const char* value, size_t size);
  inline ::std::string* add_diff_del();
  inline void add_diff_del(const ::std::string& value);
  inline void add_diff_del(const char* value);
  inline void add_diff_del(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& diff_del() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_diff_del();

  // repeated .dos.AgentOverview diff_mod = 2;
  inline int diff_mod_size() const;
  inline void clear_diff_mod();
  static const int kDiffModFieldNumber = 2;
  inline const ::dos::AgentOverview& diff_mod(int index) const;
  inline ::dos::AgentOverview* mutable_diff_mod(int index);
  inline ::dos::AgentOverview* add_diff_mod();
  inline const ::google::protobuf::RepeatedPtrField< ::dos::AgentOverview >&
      diff_mod() const;
  inline ::google::protobuf::RepeatedPtrField< ::dos::AgentOverview >*
      mutable_diff_mod();

  // optional .dos.RpcStatus status = 3;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 3;
  inline ::dos::RpcStatus status() const;
  inline void set_status(::dos::RpcStatus value);

  // @@protoc_insertion_point(class_scope:dos.SyncAgentInfoResponse)
 private:
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> diff_del_;
  ::google::protobuf::RepeatedPtrField< ::dos::AgentOverview > diff_mod_;
  int status_;
  friend void  protobuf_AddDesc_master_2eproto();
  friend void protobuf_AssignDesc_master_2eproto();
  friend void protobuf_ShutdownFile_master_2eproto();

  void InitAsDefaultInstance();
  static SyncAgentInfoResponse* default_instance_;
};
// -------------------------------------------------------------------

class Propose : public ::google::protobuf::Message {
 public:
  Propose();
  virtual ~Propose();

  Propose(const Propose& from);

  inline Propose& operator=(const Propose& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Propose& default_instance();

  void Swap(Propose* other);

  // implements Message ----------------------------------------------

  Propose* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Propose& from);
  void MergeFrom(const Propose& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string pod_name = 1;
  inline bool has_pod_name() const;
  inline void clear_pod_name();
  static const int kPodNameFieldNumber = 1;
  inline const ::std::string& pod_name() const;
  inline void set_pod_name(const ::std::string& value);
  inline void set_pod_name(const char* value);
  inline void set_pod_name(const char* value, size_t size);
  inline ::std::string* mutable_pod_name();
  inline ::std::string* release_pod_name();
  inline void set_allocated_pod_name(::std::string* pod_name);

  // optional string endpoint = 2;
  inline bool has_endpoint() const;
  inline void clear_endpoint();
  static const int kEndpointFieldNumber = 2;
  inline const ::std::string& endpoint() const;
  inline void set_endpoint(const ::std::string& value);
  inline void set_endpoint(const char* value);
  inline void set_endpoint(const char* value, size_t size);
  inline ::std::string* mutable_endpoint();
  inline ::std::string* release_endpoint();
  inline void set_allocated_endpoint(::std::string* endpoint);

  // @@protoc_insertion_point(class_scope:dos.Propose)
 private:
  inline void set_has_pod_name();
  inline void clear_has_pod_name();
  inline void set_has_endpoint();
  inline void clear_has_endpoint();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* pod_name_;
  ::std::string* endpoint_;
  friend void  protobuf_AddDesc_master_2eproto();
  friend void protobuf_AssignDesc_master_2eproto();
  friend void protobuf_ShutdownFile_master_2eproto();

  void InitAsDefaultInstance();
  static Propose* default_instance_;
};
// -------------------------------------------------------------------

class ScaleUpProposeRequest : public ::google::protobuf::Message {
 public:
  ScaleUpProposeRequest();
  virtual ~ScaleUpProposeRequest();

  ScaleUpProposeRequest(const ScaleUpProposeRequest& from);

  inline ScaleUpProposeRequest& operator=(const ScaleUpProposeRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ScaleUpProposeRequest& default_instance();

  void Swap(ScaleUpProposeRequest* other);

  // implements Message ----------------------------------------------

  ScaleUpProposeRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ScaleUpProposeRequest& from);
  void MergeFrom(const ScaleUpProposeRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .dos.Propose proposes = 1;
  inline int proposes_size() const;
  inline void clear_proposes();
  static const int kProposesFieldNumber = 1;
  inline const ::dos::Propose& proposes(int index) const;
  inline ::dos::Propose* mutable_proposes(int index);
  inline ::dos::Propose* add_proposes();
  inline const ::google::protobuf::RepeatedPtrField< ::dos::Propose >&
      proposes() const;
  inline ::google::protobuf::RepeatedPtrField< ::dos::Propose >*
      mutable_proposes();

  // @@protoc_insertion_point(class_scope:dos.ScaleUpProposeRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::dos::Propose > proposes_;
  friend void  protobuf_AddDesc_master_2eproto();
  friend void protobuf_AssignDesc_master_2eproto();
  friend void protobuf_ShutdownFile_master_2eproto();

  void InitAsDefaultInstance();
  static ScaleUpProposeRequest* default_instance_;
};
// -------------------------------------------------------------------

class ScaleUpProposeResponse : public ::google::protobuf::Message {
 public:
  ScaleUpProposeResponse();
  virtual ~ScaleUpProposeResponse();

  ScaleUpProposeResponse(const ScaleUpProposeResponse& from);

  inline ScaleUpProposeResponse& operator=(const ScaleUpProposeResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ScaleUpProposeResponse& default_instance();

  void Swap(ScaleUpProposeResponse* other);

  // implements Message ----------------------------------------------

  ScaleUpProposeResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ScaleUpProposeResponse& from);
  void MergeFrom(const ScaleUpProposeResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .dos.RpcStatus status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::dos::RpcStatus status() const;
  inline void set_status(::dos::RpcStatus value);

  // @@protoc_insertion_point(class_scope:dos.ScaleUpProposeResponse)
 private:
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int status_;
  friend void  protobuf_AddDesc_master_2eproto();
  friend void protobuf_AssignDesc_master_2eproto();
  friend void protobuf_ShutdownFile_master_2eproto();

  void InitAsDefaultInstance();
  static ScaleUpProposeResponse* default_instance_;
};
// -------------------------------------------------------------------

class JobOverview : public ::google::protobuf::Message {
 public:
  JobOverview();
  virtual ~JobOverview();

  JobOverview(const JobOverview& from);

  inline JobOverview& operator=(const JobOverview& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JobOverview& default_instance();

  void Swap(JobOverview* other);

  // implements Message ----------------------------------------------

  JobOverview* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const JobOverview& from);
  void MergeFrom(const JobOverview& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint32 running = 2;
  inline bool has_running() const;
  inline void clear_running();
  static const int kRunningFieldNumber = 2;
  inline ::google::protobuf::uint32 running() const;
  inline void set_running(::google::protobuf::uint32 value);

  // optional uint32 death = 3;
  inline bool has_death() const;
  inline void clear_death();
  static const int kDeathFieldNumber = 3;
  inline ::google::protobuf::uint32 death() const;
  inline void set_death(::google::protobuf::uint32 value);

  // optional uint32 pending = 4;
  inline bool has_pending() const;
  inline void clear_pending();
  static const int kPendingFieldNumber = 4;
  inline ::google::protobuf::uint32 pending() const;
  inline void set_pending(::google::protobuf::uint32 value);

  // optional uint32 replica = 5;
  inline bool has_replica() const;
  inline void clear_replica();
  static const int kReplicaFieldNumber = 5;
  inline ::google::protobuf::uint32 replica() const;
  inline void set_replica(::google::protobuf::uint32 value);

  // optional uint32 deploy_step = 6;
  inline bool has_deploy_step() const;
  inline void clear_deploy_step();
  static const int kDeployStepFieldNumber = 6;
  inline ::google::protobuf::uint32 deploy_step() const;
  inline void set_deploy_step(::google::protobuf::uint32 value);

  // optional string state = 7;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 7;
  inline const ::std::string& state() const;
  inline void set_state(const ::std::string& value);
  inline void set_state(const char* value);
  inline void set_state(const char* value, size_t size);
  inline ::std::string* mutable_state();
  inline ::std::string* release_state();
  inline void set_allocated_state(::std::string* state);

  // optional int64 ctime = 8;
  inline bool has_ctime() const;
  inline void clear_ctime();
  static const int kCtimeFieldNumber = 8;
  inline ::google::protobuf::int64 ctime() const;
  inline void set_ctime(::google::protobuf::int64 value);

  // optional int64 utime = 9;
  inline bool has_utime() const;
  inline void clear_utime();
  static const int kUtimeFieldNumber = 9;
  inline ::google::protobuf::int64 utime() const;
  inline void set_utime(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:dos.JobOverview)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_running();
  inline void clear_has_running();
  inline void set_has_death();
  inline void clear_has_death();
  inline void set_has_pending();
  inline void clear_has_pending();
  inline void set_has_replica();
  inline void clear_has_replica();
  inline void set_has_deploy_step();
  inline void clear_has_deploy_step();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_ctime();
  inline void clear_has_ctime();
  inline void set_has_utime();
  inline void clear_has_utime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::google::protobuf::uint32 running_;
  ::google::protobuf::uint32 death_;
  ::google::protobuf::uint32 pending_;
  ::google::protobuf::uint32 replica_;
  ::std::string* state_;
  ::google::protobuf::int64 ctime_;
  ::google::protobuf::int64 utime_;
  ::google::protobuf::uint32 deploy_step_;
  friend void  protobuf_AddDesc_master_2eproto();
  friend void protobuf_AssignDesc_master_2eproto();
  friend void protobuf_ShutdownFile_master_2eproto();

  void InitAsDefaultInstance();
  static JobOverview* default_instance_;
};
// -------------------------------------------------------------------

class GetJobRequest : public ::google::protobuf::Message {
 public:
  GetJobRequest();
  virtual ~GetJobRequest();

  GetJobRequest(const GetJobRequest& from);

  inline GetJobRequest& operator=(const GetJobRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetJobRequest& default_instance();

  void Swap(GetJobRequest* other);

  // implements Message ----------------------------------------------

  GetJobRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetJobRequest& from);
  void MergeFrom(const GetJobRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:dos.GetJobRequest)
 private:
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  friend void  protobuf_AddDesc_master_2eproto();
  friend void protobuf_AssignDesc_master_2eproto();
  friend void protobuf_ShutdownFile_master_2eproto();

  void InitAsDefaultInstance();
  static GetJobRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetJobResponse : public ::google::protobuf::Message {
 public:
  GetJobResponse();
  virtual ~GetJobResponse();

  GetJobResponse(const GetJobResponse& from);

  inline GetJobResponse& operator=(const GetJobResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetJobResponse& default_instance();

  void Swap(GetJobResponse* other);

  // implements Message ----------------------------------------------

  GetJobResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetJobResponse& from);
  void MergeFrom(const GetJobResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .dos.RpcStatus status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::dos::RpcStatus status() const;
  inline void set_status(::dos::RpcStatus value);

  // optional .dos.JobOverview job = 2;
  inline bool has_job() const;
  inline void clear_job();
  static const int kJobFieldNumber = 2;
  inline const ::dos::JobOverview& job() const;
  inline ::dos::JobOverview* mutable_job();
  inline ::dos::JobOverview* release_job();
  inline void set_allocated_job(::dos::JobOverview* job);

  // @@protoc_insertion_point(class_scope:dos.GetJobResponse)
 private:
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_job();
  inline void clear_has_job();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::dos::JobOverview* job_;
  int status_;
  friend void  protobuf_AddDesc_master_2eproto();
  friend void protobuf_AssignDesc_master_2eproto();
  friend void protobuf_ShutdownFile_master_2eproto();

  void InitAsDefaultInstance();
  static GetJobResponse* default_instance_;
};
// -------------------------------------------------------------------

class KillJobRequest : public ::google::protobuf::Message {
 public:
  KillJobRequest();
  virtual ~KillJobRequest();

  KillJobRequest(const KillJobRequest& from);

  inline KillJobRequest& operator=(const KillJobRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KillJobRequest& default_instance();

  void Swap(KillJobRequest* other);

  // implements Message ----------------------------------------------

  KillJobRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KillJobRequest& from);
  void MergeFrom(const KillJobRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:dos.KillJobRequest)
 private:
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  friend void  protobuf_AddDesc_master_2eproto();
  friend void protobuf_AssignDesc_master_2eproto();
  friend void protobuf_ShutdownFile_master_2eproto();

  void InitAsDefaultInstance();
  static KillJobRequest* default_instance_;
};
// -------------------------------------------------------------------

class KillJobResponse : public ::google::protobuf::Message {
 public:
  KillJobResponse();
  virtual ~KillJobResponse();

  KillJobResponse(const KillJobResponse& from);

  inline KillJobResponse& operator=(const KillJobResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KillJobResponse& default_instance();

  void Swap(KillJobResponse* other);

  // implements Message ----------------------------------------------

  KillJobResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const KillJobResponse& from);
  void MergeFrom(const KillJobResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .dos.RpcStatus status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::dos::RpcStatus status() const;
  inline void set_status(::dos::RpcStatus value);

  // @@protoc_insertion_point(class_scope:dos.KillJobResponse)
 private:
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int status_;
  friend void  protobuf_AddDesc_master_2eproto();
  friend void protobuf_AssignDesc_master_2eproto();
  friend void protobuf_ShutdownFile_master_2eproto();

  void InitAsDefaultInstance();
  static KillJobResponse* default_instance_;
};
// ===================================================================

class Master_Stub;

class Master : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline Master() {};
 public:
  virtual ~Master();

  typedef Master_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void SubmitJob(::google::protobuf::RpcController* controller,
                       const ::dos::SubmitJobRequest* request,
                       ::dos::SubmitJobResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void HeartBeat(::google::protobuf::RpcController* controller,
                       const ::dos::HeartBeatRequest* request,
                       ::dos::HeartBeatResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void GetScaleUpPod(::google::protobuf::RpcController* controller,
                       const ::dos::GetScaleUpPodRequest* request,
                       ::dos::GetScaleUpPodResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void SyncAgentInfo(::google::protobuf::RpcController* controller,
                       const ::dos::SyncAgentInfoRequest* request,
                       ::dos::SyncAgentInfoResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void ScaleUpPropose(::google::protobuf::RpcController* controller,
                       const ::dos::ScaleUpProposeRequest* request,
                       ::dos::ScaleUpProposeResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void GetJob(::google::protobuf::RpcController* controller,
                       const ::dos::GetJobRequest* request,
                       ::dos::GetJobResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void KillJob(::google::protobuf::RpcController* controller,
                       const ::dos::KillJobRequest* request,
                       ::dos::KillJobResponse* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(Master);
};

class Master_Stub : public Master {
 public:
  Master_Stub(::google::protobuf::RpcChannel* channel);
  Master_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~Master_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements Master ------------------------------------------

  void SubmitJob(::google::protobuf::RpcController* controller,
                       const ::dos::SubmitJobRequest* request,
                       ::dos::SubmitJobResponse* response,
                       ::google::protobuf::Closure* done);
  void HeartBeat(::google::protobuf::RpcController* controller,
                       const ::dos::HeartBeatRequest* request,
                       ::dos::HeartBeatResponse* response,
                       ::google::protobuf::Closure* done);
  void GetScaleUpPod(::google::protobuf::RpcController* controller,
                       const ::dos::GetScaleUpPodRequest* request,
                       ::dos::GetScaleUpPodResponse* response,
                       ::google::protobuf::Closure* done);
  void SyncAgentInfo(::google::protobuf::RpcController* controller,
                       const ::dos::SyncAgentInfoRequest* request,
                       ::dos::SyncAgentInfoResponse* response,
                       ::google::protobuf::Closure* done);
  void ScaleUpPropose(::google::protobuf::RpcController* controller,
                       const ::dos::ScaleUpProposeRequest* request,
                       ::dos::ScaleUpProposeResponse* response,
                       ::google::protobuf::Closure* done);
  void GetJob(::google::protobuf::RpcController* controller,
                       const ::dos::GetJobRequest* request,
                       ::dos::GetJobResponse* response,
                       ::google::protobuf::Closure* done);
  void KillJob(::google::protobuf::RpcController* controller,
                       const ::dos::KillJobRequest* request,
                       ::dos::KillJobResponse* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(Master_Stub);
};


// ===================================================================


// ===================================================================

// HeartBeatRequest

// optional string hostname = 1;
inline bool HeartBeatRequest::has_hostname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeartBeatRequest::set_has_hostname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeartBeatRequest::clear_has_hostname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeartBeatRequest::clear_hostname() {
  if (hostname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    hostname_->clear();
  }
  clear_has_hostname();
}
inline const ::std::string& HeartBeatRequest::hostname() const {
  // @@protoc_insertion_point(field_get:dos.HeartBeatRequest.hostname)
  return *hostname_;
}
inline void HeartBeatRequest::set_hostname(const ::std::string& value) {
  set_has_hostname();
  if (hostname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    hostname_ = new ::std::string;
  }
  hostname_->assign(value);
  // @@protoc_insertion_point(field_set:dos.HeartBeatRequest.hostname)
}
inline void HeartBeatRequest::set_hostname(const char* value) {
  set_has_hostname();
  if (hostname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    hostname_ = new ::std::string;
  }
  hostname_->assign(value);
  // @@protoc_insertion_point(field_set_char:dos.HeartBeatRequest.hostname)
}
inline void HeartBeatRequest::set_hostname(const char* value, size_t size) {
  set_has_hostname();
  if (hostname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    hostname_ = new ::std::string;
  }
  hostname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dos.HeartBeatRequest.hostname)
}
inline ::std::string* HeartBeatRequest::mutable_hostname() {
  set_has_hostname();
  if (hostname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    hostname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:dos.HeartBeatRequest.hostname)
  return hostname_;
}
inline ::std::string* HeartBeatRequest::release_hostname() {
  clear_has_hostname();
  if (hostname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = hostname_;
    hostname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HeartBeatRequest::set_allocated_hostname(::std::string* hostname) {
  if (hostname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete hostname_;
  }
  if (hostname) {
    set_has_hostname();
    hostname_ = hostname;
  } else {
    clear_has_hostname();
    hostname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:dos.HeartBeatRequest.hostname)
}

// optional string endpoint = 2;
inline bool HeartBeatRequest::has_endpoint() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HeartBeatRequest::set_has_endpoint() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HeartBeatRequest::clear_has_endpoint() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HeartBeatRequest::clear_endpoint() {
  if (endpoint_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    endpoint_->clear();
  }
  clear_has_endpoint();
}
inline const ::std::string& HeartBeatRequest::endpoint() const {
  // @@protoc_insertion_point(field_get:dos.HeartBeatRequest.endpoint)
  return *endpoint_;
}
inline void HeartBeatRequest::set_endpoint(const ::std::string& value) {
  set_has_endpoint();
  if (endpoint_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    endpoint_ = new ::std::string;
  }
  endpoint_->assign(value);
  // @@protoc_insertion_point(field_set:dos.HeartBeatRequest.endpoint)
}
inline void HeartBeatRequest::set_endpoint(const char* value) {
  set_has_endpoint();
  if (endpoint_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    endpoint_ = new ::std::string;
  }
  endpoint_->assign(value);
  // @@protoc_insertion_point(field_set_char:dos.HeartBeatRequest.endpoint)
}
inline void HeartBeatRequest::set_endpoint(const char* value, size_t size) {
  set_has_endpoint();
  if (endpoint_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    endpoint_ = new ::std::string;
  }
  endpoint_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dos.HeartBeatRequest.endpoint)
}
inline ::std::string* HeartBeatRequest::mutable_endpoint() {
  set_has_endpoint();
  if (endpoint_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    endpoint_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:dos.HeartBeatRequest.endpoint)
  return endpoint_;
}
inline ::std::string* HeartBeatRequest::release_endpoint() {
  clear_has_endpoint();
  if (endpoint_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = endpoint_;
    endpoint_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void HeartBeatRequest::set_allocated_endpoint(::std::string* endpoint) {
  if (endpoint_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete endpoint_;
  }
  if (endpoint) {
    set_has_endpoint();
    endpoint_ = endpoint;
  } else {
    clear_has_endpoint();
    endpoint_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:dos.HeartBeatRequest.endpoint)
}

// -------------------------------------------------------------------

// HeartBeatResponse

// -------------------------------------------------------------------

// SubmitJobRequest

// optional string user_name = 1;
inline bool SubmitJobRequest::has_user_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SubmitJobRequest::set_has_user_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SubmitJobRequest::clear_has_user_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SubmitJobRequest::clear_user_name() {
  if (user_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_name_->clear();
  }
  clear_has_user_name();
}
inline const ::std::string& SubmitJobRequest::user_name() const {
  // @@protoc_insertion_point(field_get:dos.SubmitJobRequest.user_name)
  return *user_name_;
}
inline void SubmitJobRequest::set_user_name(const ::std::string& value) {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(value);
  // @@protoc_insertion_point(field_set:dos.SubmitJobRequest.user_name)
}
inline void SubmitJobRequest::set_user_name(const char* value) {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:dos.SubmitJobRequest.user_name)
}
inline void SubmitJobRequest::set_user_name(const char* value, size_t size) {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_name_ = new ::std::string;
  }
  user_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dos.SubmitJobRequest.user_name)
}
inline ::std::string* SubmitJobRequest::mutable_user_name() {
  set_has_user_name();
  if (user_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    user_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:dos.SubmitJobRequest.user_name)
  return user_name_;
}
inline ::std::string* SubmitJobRequest::release_user_name() {
  clear_has_user_name();
  if (user_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = user_name_;
    user_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void SubmitJobRequest::set_allocated_user_name(::std::string* user_name) {
  if (user_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete user_name_;
  }
  if (user_name) {
    set_has_user_name();
    user_name_ = user_name;
  } else {
    clear_has_user_name();
    user_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:dos.SubmitJobRequest.user_name)
}

// optional .dos.JobSpec job = 2;
inline bool SubmitJobRequest::has_job() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SubmitJobRequest::set_has_job() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SubmitJobRequest::clear_has_job() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SubmitJobRequest::clear_job() {
  if (job_ != NULL) job_->::dos::JobSpec::Clear();
  clear_has_job();
}
inline const ::dos::JobSpec& SubmitJobRequest::job() const {
  // @@protoc_insertion_point(field_get:dos.SubmitJobRequest.job)
  return job_ != NULL ? *job_ : *default_instance_->job_;
}
inline ::dos::JobSpec* SubmitJobRequest::mutable_job() {
  set_has_job();
  if (job_ == NULL) job_ = new ::dos::JobSpec;
  // @@protoc_insertion_point(field_mutable:dos.SubmitJobRequest.job)
  return job_;
}
inline ::dos::JobSpec* SubmitJobRequest::release_job() {
  clear_has_job();
  ::dos::JobSpec* temp = job_;
  job_ = NULL;
  return temp;
}
inline void SubmitJobRequest::set_allocated_job(::dos::JobSpec* job) {
  delete job_;
  job_ = job;
  if (job) {
    set_has_job();
  } else {
    clear_has_job();
  }
  // @@protoc_insertion_point(field_set_allocated:dos.SubmitJobRequest.job)
}

// -------------------------------------------------------------------

// SubmitJobResponse

// optional .dos.RpcStatus status = 1;
inline bool SubmitJobResponse::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SubmitJobResponse::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SubmitJobResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SubmitJobResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::dos::RpcStatus SubmitJobResponse::status() const {
  // @@protoc_insertion_point(field_get:dos.SubmitJobResponse.status)
  return static_cast< ::dos::RpcStatus >(status_);
}
inline void SubmitJobResponse::set_status(::dos::RpcStatus value) {
  assert(::dos::RpcStatus_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:dos.SubmitJobResponse.status)
}

// -------------------------------------------------------------------

// Condition

// repeated .dos.PodType types = 1;
inline int Condition::types_size() const {
  return types_.size();
}
inline void Condition::clear_types() {
  types_.Clear();
}
inline ::dos::PodType Condition::types(int index) const {
  // @@protoc_insertion_point(field_get:dos.Condition.types)
  return static_cast< ::dos::PodType >(types_.Get(index));
}
inline void Condition::set_types(int index, ::dos::PodType value) {
  assert(::dos::PodType_IsValid(value));
  types_.Set(index, value);
  // @@protoc_insertion_point(field_set:dos.Condition.types)
}
inline void Condition::add_types(::dos::PodType value) {
  assert(::dos::PodType_IsValid(value));
  types_.Add(value);
  // @@protoc_insertion_point(field_add:dos.Condition.types)
}
inline const ::google::protobuf::RepeatedField<int>&
Condition::types() const {
  // @@protoc_insertion_point(field_list:dos.Condition.types)
  return types_;
}
inline ::google::protobuf::RepeatedField<int>*
Condition::mutable_types() {
  // @@protoc_insertion_point(field_mutable_list:dos.Condition.types)
  return &types_;
}

// optional string job_name_contain = 2;
inline bool Condition::has_job_name_contain() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Condition::set_has_job_name_contain() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Condition::clear_has_job_name_contain() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Condition::clear_job_name_contain() {
  if (job_name_contain_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    job_name_contain_->clear();
  }
  clear_has_job_name_contain();
}
inline const ::std::string& Condition::job_name_contain() const {
  // @@protoc_insertion_point(field_get:dos.Condition.job_name_contain)
  return *job_name_contain_;
}
inline void Condition::set_job_name_contain(const ::std::string& value) {
  set_has_job_name_contain();
  if (job_name_contain_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    job_name_contain_ = new ::std::string;
  }
  job_name_contain_->assign(value);
  // @@protoc_insertion_point(field_set:dos.Condition.job_name_contain)
}
inline void Condition::set_job_name_contain(const char* value) {
  set_has_job_name_contain();
  if (job_name_contain_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    job_name_contain_ = new ::std::string;
  }
  job_name_contain_->assign(value);
  // @@protoc_insertion_point(field_set_char:dos.Condition.job_name_contain)
}
inline void Condition::set_job_name_contain(const char* value, size_t size) {
  set_has_job_name_contain();
  if (job_name_contain_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    job_name_contain_ = new ::std::string;
  }
  job_name_contain_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dos.Condition.job_name_contain)
}
inline ::std::string* Condition::mutable_job_name_contain() {
  set_has_job_name_contain();
  if (job_name_contain_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    job_name_contain_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:dos.Condition.job_name_contain)
  return job_name_contain_;
}
inline ::std::string* Condition::release_job_name_contain() {
  clear_has_job_name_contain();
  if (job_name_contain_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = job_name_contain_;
    job_name_contain_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Condition::set_allocated_job_name_contain(::std::string* job_name_contain) {
  if (job_name_contain_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete job_name_contain_;
  }
  if (job_name_contain) {
    set_has_job_name_contain();
    job_name_contain_ = job_name_contain;
  } else {
    clear_has_job_name_contain();
    job_name_contain_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:dos.Condition.job_name_contain)
}

// -------------------------------------------------------------------

// GetScaleUpPodRequest

// optional .dos.Condition condition = 1;
inline bool GetScaleUpPodRequest::has_condition() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetScaleUpPodRequest::set_has_condition() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetScaleUpPodRequest::clear_has_condition() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetScaleUpPodRequest::clear_condition() {
  if (condition_ != NULL) condition_->::dos::Condition::Clear();
  clear_has_condition();
}
inline const ::dos::Condition& GetScaleUpPodRequest::condition() const {
  // @@protoc_insertion_point(field_get:dos.GetScaleUpPodRequest.condition)
  return condition_ != NULL ? *condition_ : *default_instance_->condition_;
}
inline ::dos::Condition* GetScaleUpPodRequest::mutable_condition() {
  set_has_condition();
  if (condition_ == NULL) condition_ = new ::dos::Condition;
  // @@protoc_insertion_point(field_mutable:dos.GetScaleUpPodRequest.condition)
  return condition_;
}
inline ::dos::Condition* GetScaleUpPodRequest::release_condition() {
  clear_has_condition();
  ::dos::Condition* temp = condition_;
  condition_ = NULL;
  return temp;
}
inline void GetScaleUpPodRequest::set_allocated_condition(::dos::Condition* condition) {
  delete condition_;
  condition_ = condition;
  if (condition) {
    set_has_condition();
  } else {
    clear_has_condition();
  }
  // @@protoc_insertion_point(field_set_allocated:dos.GetScaleUpPodRequest.condition)
}

// -------------------------------------------------------------------

// PodOverview

// optional string name = 1;
inline bool PodOverview::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PodOverview::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PodOverview::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PodOverview::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& PodOverview::name() const {
  // @@protoc_insertion_point(field_get:dos.PodOverview.name)
  return *name_;
}
inline void PodOverview::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:dos.PodOverview.name)
}
inline void PodOverview::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:dos.PodOverview.name)
}
inline void PodOverview::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dos.PodOverview.name)
}
inline ::std::string* PodOverview::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:dos.PodOverview.name)
  return name_;
}
inline ::std::string* PodOverview::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PodOverview::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:dos.PodOverview.name)
}

// optional .dos.Resource requirement = 2;
inline bool PodOverview::has_requirement() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PodOverview::set_has_requirement() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PodOverview::clear_has_requirement() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PodOverview::clear_requirement() {
  if (requirement_ != NULL) requirement_->::dos::Resource::Clear();
  clear_has_requirement();
}
inline const ::dos::Resource& PodOverview::requirement() const {
  // @@protoc_insertion_point(field_get:dos.PodOverview.requirement)
  return requirement_ != NULL ? *requirement_ : *default_instance_->requirement_;
}
inline ::dos::Resource* PodOverview::mutable_requirement() {
  set_has_requirement();
  if (requirement_ == NULL) requirement_ = new ::dos::Resource;
  // @@protoc_insertion_point(field_mutable:dos.PodOverview.requirement)
  return requirement_;
}
inline ::dos::Resource* PodOverview::release_requirement() {
  clear_has_requirement();
  ::dos::Resource* temp = requirement_;
  requirement_ = NULL;
  return temp;
}
inline void PodOverview::set_allocated_requirement(::dos::Resource* requirement) {
  delete requirement_;
  requirement_ = requirement;
  if (requirement) {
    set_has_requirement();
  } else {
    clear_has_requirement();
  }
  // @@protoc_insertion_point(field_set_allocated:dos.PodOverview.requirement)
}

// optional .dos.PodType type = 3;
inline bool PodOverview::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PodOverview::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PodOverview::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PodOverview::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::dos::PodType PodOverview::type() const {
  // @@protoc_insertion_point(field_get:dos.PodOverview.type)
  return static_cast< ::dos::PodType >(type_);
}
inline void PodOverview::set_type(::dos::PodType value) {
  assert(::dos::PodType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:dos.PodOverview.type)
}

// optional string job_name = 4;
inline bool PodOverview::has_job_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PodOverview::set_has_job_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PodOverview::clear_has_job_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PodOverview::clear_job_name() {
  if (job_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    job_name_->clear();
  }
  clear_has_job_name();
}
inline const ::std::string& PodOverview::job_name() const {
  // @@protoc_insertion_point(field_get:dos.PodOverview.job_name)
  return *job_name_;
}
inline void PodOverview::set_job_name(const ::std::string& value) {
  set_has_job_name();
  if (job_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    job_name_ = new ::std::string;
  }
  job_name_->assign(value);
  // @@protoc_insertion_point(field_set:dos.PodOverview.job_name)
}
inline void PodOverview::set_job_name(const char* value) {
  set_has_job_name();
  if (job_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    job_name_ = new ::std::string;
  }
  job_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:dos.PodOverview.job_name)
}
inline void PodOverview::set_job_name(const char* value, size_t size) {
  set_has_job_name();
  if (job_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    job_name_ = new ::std::string;
  }
  job_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dos.PodOverview.job_name)
}
inline ::std::string* PodOverview::mutable_job_name() {
  set_has_job_name();
  if (job_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    job_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:dos.PodOverview.job_name)
  return job_name_;
}
inline ::std::string* PodOverview::release_job_name() {
  clear_has_job_name();
  if (job_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = job_name_;
    job_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void PodOverview::set_allocated_job_name(::std::string* job_name) {
  if (job_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete job_name_;
  }
  if (job_name) {
    set_has_job_name();
    job_name_ = job_name;
  } else {
    clear_has_job_name();
    job_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:dos.PodOverview.job_name)
}

// -------------------------------------------------------------------

// GetScaleUpPodResponse

// repeated .dos.PodOverview pods = 1;
inline int GetScaleUpPodResponse::pods_size() const {
  return pods_.size();
}
inline void GetScaleUpPodResponse::clear_pods() {
  pods_.Clear();
}
inline const ::dos::PodOverview& GetScaleUpPodResponse::pods(int index) const {
  // @@protoc_insertion_point(field_get:dos.GetScaleUpPodResponse.pods)
  return pods_.Get(index);
}
inline ::dos::PodOverview* GetScaleUpPodResponse::mutable_pods(int index) {
  // @@protoc_insertion_point(field_mutable:dos.GetScaleUpPodResponse.pods)
  return pods_.Mutable(index);
}
inline ::dos::PodOverview* GetScaleUpPodResponse::add_pods() {
  // @@protoc_insertion_point(field_add:dos.GetScaleUpPodResponse.pods)
  return pods_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dos::PodOverview >&
GetScaleUpPodResponse::pods() const {
  // @@protoc_insertion_point(field_list:dos.GetScaleUpPodResponse.pods)
  return pods_;
}
inline ::google::protobuf::RepeatedPtrField< ::dos::PodOverview >*
GetScaleUpPodResponse::mutable_pods() {
  // @@protoc_insertion_point(field_mutable_list:dos.GetScaleUpPodResponse.pods)
  return &pods_;
}

// optional .dos.RpcStatus status = 2;
inline bool GetScaleUpPodResponse::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetScaleUpPodResponse::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetScaleUpPodResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetScaleUpPodResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::dos::RpcStatus GetScaleUpPodResponse::status() const {
  // @@protoc_insertion_point(field_get:dos.GetScaleUpPodResponse.status)
  return static_cast< ::dos::RpcStatus >(status_);
}
inline void GetScaleUpPodResponse::set_status(::dos::RpcStatus value) {
  assert(::dos::RpcStatus_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:dos.GetScaleUpPodResponse.status)
}

// -------------------------------------------------------------------

// AgentOverview

// optional string endpoint = 1;
inline bool AgentOverview::has_endpoint() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AgentOverview::set_has_endpoint() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AgentOverview::clear_has_endpoint() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AgentOverview::clear_endpoint() {
  if (endpoint_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    endpoint_->clear();
  }
  clear_has_endpoint();
}
inline const ::std::string& AgentOverview::endpoint() const {
  // @@protoc_insertion_point(field_get:dos.AgentOverview.endpoint)
  return *endpoint_;
}
inline void AgentOverview::set_endpoint(const ::std::string& value) {
  set_has_endpoint();
  if (endpoint_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    endpoint_ = new ::std::string;
  }
  endpoint_->assign(value);
  // @@protoc_insertion_point(field_set:dos.AgentOverview.endpoint)
}
inline void AgentOverview::set_endpoint(const char* value) {
  set_has_endpoint();
  if (endpoint_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    endpoint_ = new ::std::string;
  }
  endpoint_->assign(value);
  // @@protoc_insertion_point(field_set_char:dos.AgentOverview.endpoint)
}
inline void AgentOverview::set_endpoint(const char* value, size_t size) {
  set_has_endpoint();
  if (endpoint_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    endpoint_ = new ::std::string;
  }
  endpoint_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dos.AgentOverview.endpoint)
}
inline ::std::string* AgentOverview::mutable_endpoint() {
  set_has_endpoint();
  if (endpoint_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    endpoint_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:dos.AgentOverview.endpoint)
  return endpoint_;
}
inline ::std::string* AgentOverview::release_endpoint() {
  clear_has_endpoint();
  if (endpoint_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = endpoint_;
    endpoint_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AgentOverview::set_allocated_endpoint(::std::string* endpoint) {
  if (endpoint_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete endpoint_;
  }
  if (endpoint) {
    set_has_endpoint();
    endpoint_ = endpoint;
  } else {
    clear_has_endpoint();
    endpoint_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:dos.AgentOverview.endpoint)
}

// optional .dos.Resource resource = 2;
inline bool AgentOverview::has_resource() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AgentOverview::set_has_resource() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AgentOverview::clear_has_resource() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AgentOverview::clear_resource() {
  if (resource_ != NULL) resource_->::dos::Resource::Clear();
  clear_has_resource();
}
inline const ::dos::Resource& AgentOverview::resource() const {
  // @@protoc_insertion_point(field_get:dos.AgentOverview.resource)
  return resource_ != NULL ? *resource_ : *default_instance_->resource_;
}
inline ::dos::Resource* AgentOverview::mutable_resource() {
  set_has_resource();
  if (resource_ == NULL) resource_ = new ::dos::Resource;
  // @@protoc_insertion_point(field_mutable:dos.AgentOverview.resource)
  return resource_;
}
inline ::dos::Resource* AgentOverview::release_resource() {
  clear_has_resource();
  ::dos::Resource* temp = resource_;
  resource_ = NULL;
  return temp;
}
inline void AgentOverview::set_allocated_resource(::dos::Resource* resource) {
  delete resource_;
  resource_ = resource;
  if (resource) {
    set_has_resource();
  } else {
    clear_has_resource();
  }
  // @@protoc_insertion_point(field_set_allocated:dos.AgentOverview.resource)
}

// repeated .dos.PodOverview pods = 3;
inline int AgentOverview::pods_size() const {
  return pods_.size();
}
inline void AgentOverview::clear_pods() {
  pods_.Clear();
}
inline const ::dos::PodOverview& AgentOverview::pods(int index) const {
  // @@protoc_insertion_point(field_get:dos.AgentOverview.pods)
  return pods_.Get(index);
}
inline ::dos::PodOverview* AgentOverview::mutable_pods(int index) {
  // @@protoc_insertion_point(field_mutable:dos.AgentOverview.pods)
  return pods_.Mutable(index);
}
inline ::dos::PodOverview* AgentOverview::add_pods() {
  // @@protoc_insertion_point(field_add:dos.AgentOverview.pods)
  return pods_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dos::PodOverview >&
AgentOverview::pods() const {
  // @@protoc_insertion_point(field_list:dos.AgentOverview.pods)
  return pods_;
}
inline ::google::protobuf::RepeatedPtrField< ::dos::PodOverview >*
AgentOverview::mutable_pods() {
  // @@protoc_insertion_point(field_mutable_list:dos.AgentOverview.pods)
  return &pods_;
}

// optional int32 version = 4;
inline bool AgentOverview::has_version() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AgentOverview::set_has_version() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AgentOverview::clear_has_version() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AgentOverview::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::google::protobuf::int32 AgentOverview::version() const {
  // @@protoc_insertion_point(field_get:dos.AgentOverview.version)
  return version_;
}
inline void AgentOverview::set_version(::google::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:dos.AgentOverview.version)
}

// -------------------------------------------------------------------

// AgentVersion

// optional string endpoint = 1;
inline bool AgentVersion::has_endpoint() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AgentVersion::set_has_endpoint() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AgentVersion::clear_has_endpoint() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AgentVersion::clear_endpoint() {
  if (endpoint_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    endpoint_->clear();
  }
  clear_has_endpoint();
}
inline const ::std::string& AgentVersion::endpoint() const {
  // @@protoc_insertion_point(field_get:dos.AgentVersion.endpoint)
  return *endpoint_;
}
inline void AgentVersion::set_endpoint(const ::std::string& value) {
  set_has_endpoint();
  if (endpoint_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    endpoint_ = new ::std::string;
  }
  endpoint_->assign(value);
  // @@protoc_insertion_point(field_set:dos.AgentVersion.endpoint)
}
inline void AgentVersion::set_endpoint(const char* value) {
  set_has_endpoint();
  if (endpoint_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    endpoint_ = new ::std::string;
  }
  endpoint_->assign(value);
  // @@protoc_insertion_point(field_set_char:dos.AgentVersion.endpoint)
}
inline void AgentVersion::set_endpoint(const char* value, size_t size) {
  set_has_endpoint();
  if (endpoint_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    endpoint_ = new ::std::string;
  }
  endpoint_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dos.AgentVersion.endpoint)
}
inline ::std::string* AgentVersion::mutable_endpoint() {
  set_has_endpoint();
  if (endpoint_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    endpoint_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:dos.AgentVersion.endpoint)
  return endpoint_;
}
inline ::std::string* AgentVersion::release_endpoint() {
  clear_has_endpoint();
  if (endpoint_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = endpoint_;
    endpoint_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AgentVersion::set_allocated_endpoint(::std::string* endpoint) {
  if (endpoint_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete endpoint_;
  }
  if (endpoint) {
    set_has_endpoint();
    endpoint_ = endpoint;
  } else {
    clear_has_endpoint();
    endpoint_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:dos.AgentVersion.endpoint)
}

// optional int32 version = 2;
inline bool AgentVersion::has_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AgentVersion::set_has_version() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AgentVersion::clear_has_version() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AgentVersion::clear_version() {
  version_ = 0;
  clear_has_version();
}
inline ::google::protobuf::int32 AgentVersion::version() const {
  // @@protoc_insertion_point(field_get:dos.AgentVersion.version)
  return version_;
}
inline void AgentVersion::set_version(::google::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:dos.AgentVersion.version)
}

// -------------------------------------------------------------------

// SyncAgentInfoRequest

// repeated .dos.AgentVersion versions = 1;
inline int SyncAgentInfoRequest::versions_size() const {
  return versions_.size();
}
inline void SyncAgentInfoRequest::clear_versions() {
  versions_.Clear();
}
inline const ::dos::AgentVersion& SyncAgentInfoRequest::versions(int index) const {
  // @@protoc_insertion_point(field_get:dos.SyncAgentInfoRequest.versions)
  return versions_.Get(index);
}
inline ::dos::AgentVersion* SyncAgentInfoRequest::mutable_versions(int index) {
  // @@protoc_insertion_point(field_mutable:dos.SyncAgentInfoRequest.versions)
  return versions_.Mutable(index);
}
inline ::dos::AgentVersion* SyncAgentInfoRequest::add_versions() {
  // @@protoc_insertion_point(field_add:dos.SyncAgentInfoRequest.versions)
  return versions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dos::AgentVersion >&
SyncAgentInfoRequest::versions() const {
  // @@protoc_insertion_point(field_list:dos.SyncAgentInfoRequest.versions)
  return versions_;
}
inline ::google::protobuf::RepeatedPtrField< ::dos::AgentVersion >*
SyncAgentInfoRequest::mutable_versions() {
  // @@protoc_insertion_point(field_mutable_list:dos.SyncAgentInfoRequest.versions)
  return &versions_;
}

// -------------------------------------------------------------------

// SyncAgentInfoResponse

// repeated string diff_del = 1;
inline int SyncAgentInfoResponse::diff_del_size() const {
  return diff_del_.size();
}
inline void SyncAgentInfoResponse::clear_diff_del() {
  diff_del_.Clear();
}
inline const ::std::string& SyncAgentInfoResponse::diff_del(int index) const {
  // @@protoc_insertion_point(field_get:dos.SyncAgentInfoResponse.diff_del)
  return diff_del_.Get(index);
}
inline ::std::string* SyncAgentInfoResponse::mutable_diff_del(int index) {
  // @@protoc_insertion_point(field_mutable:dos.SyncAgentInfoResponse.diff_del)
  return diff_del_.Mutable(index);
}
inline void SyncAgentInfoResponse::set_diff_del(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:dos.SyncAgentInfoResponse.diff_del)
  diff_del_.Mutable(index)->assign(value);
}
inline void SyncAgentInfoResponse::set_diff_del(int index, const char* value) {
  diff_del_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:dos.SyncAgentInfoResponse.diff_del)
}
inline void SyncAgentInfoResponse::set_diff_del(int index, const char* value, size_t size) {
  diff_del_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dos.SyncAgentInfoResponse.diff_del)
}
inline ::std::string* SyncAgentInfoResponse::add_diff_del() {
  return diff_del_.Add();
}
inline void SyncAgentInfoResponse::add_diff_del(const ::std::string& value) {
  diff_del_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:dos.SyncAgentInfoResponse.diff_del)
}
inline void SyncAgentInfoResponse::add_diff_del(const char* value) {
  diff_del_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:dos.SyncAgentInfoResponse.diff_del)
}
inline void SyncAgentInfoResponse::add_diff_del(const char* value, size_t size) {
  diff_del_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:dos.SyncAgentInfoResponse.diff_del)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
SyncAgentInfoResponse::diff_del() const {
  // @@protoc_insertion_point(field_list:dos.SyncAgentInfoResponse.diff_del)
  return diff_del_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
SyncAgentInfoResponse::mutable_diff_del() {
  // @@protoc_insertion_point(field_mutable_list:dos.SyncAgentInfoResponse.diff_del)
  return &diff_del_;
}

// repeated .dos.AgentOverview diff_mod = 2;
inline int SyncAgentInfoResponse::diff_mod_size() const {
  return diff_mod_.size();
}
inline void SyncAgentInfoResponse::clear_diff_mod() {
  diff_mod_.Clear();
}
inline const ::dos::AgentOverview& SyncAgentInfoResponse::diff_mod(int index) const {
  // @@protoc_insertion_point(field_get:dos.SyncAgentInfoResponse.diff_mod)
  return diff_mod_.Get(index);
}
inline ::dos::AgentOverview* SyncAgentInfoResponse::mutable_diff_mod(int index) {
  // @@protoc_insertion_point(field_mutable:dos.SyncAgentInfoResponse.diff_mod)
  return diff_mod_.Mutable(index);
}
inline ::dos::AgentOverview* SyncAgentInfoResponse::add_diff_mod() {
  // @@protoc_insertion_point(field_add:dos.SyncAgentInfoResponse.diff_mod)
  return diff_mod_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dos::AgentOverview >&
SyncAgentInfoResponse::diff_mod() const {
  // @@protoc_insertion_point(field_list:dos.SyncAgentInfoResponse.diff_mod)
  return diff_mod_;
}
inline ::google::protobuf::RepeatedPtrField< ::dos::AgentOverview >*
SyncAgentInfoResponse::mutable_diff_mod() {
  // @@protoc_insertion_point(field_mutable_list:dos.SyncAgentInfoResponse.diff_mod)
  return &diff_mod_;
}

// optional .dos.RpcStatus status = 3;
inline bool SyncAgentInfoResponse::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SyncAgentInfoResponse::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SyncAgentInfoResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SyncAgentInfoResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::dos::RpcStatus SyncAgentInfoResponse::status() const {
  // @@protoc_insertion_point(field_get:dos.SyncAgentInfoResponse.status)
  return static_cast< ::dos::RpcStatus >(status_);
}
inline void SyncAgentInfoResponse::set_status(::dos::RpcStatus value) {
  assert(::dos::RpcStatus_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:dos.SyncAgentInfoResponse.status)
}

// -------------------------------------------------------------------

// Propose

// optional string pod_name = 1;
inline bool Propose::has_pod_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Propose::set_has_pod_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Propose::clear_has_pod_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Propose::clear_pod_name() {
  if (pod_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pod_name_->clear();
  }
  clear_has_pod_name();
}
inline const ::std::string& Propose::pod_name() const {
  // @@protoc_insertion_point(field_get:dos.Propose.pod_name)
  return *pod_name_;
}
inline void Propose::set_pod_name(const ::std::string& value) {
  set_has_pod_name();
  if (pod_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pod_name_ = new ::std::string;
  }
  pod_name_->assign(value);
  // @@protoc_insertion_point(field_set:dos.Propose.pod_name)
}
inline void Propose::set_pod_name(const char* value) {
  set_has_pod_name();
  if (pod_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pod_name_ = new ::std::string;
  }
  pod_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:dos.Propose.pod_name)
}
inline void Propose::set_pod_name(const char* value, size_t size) {
  set_has_pod_name();
  if (pod_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pod_name_ = new ::std::string;
  }
  pod_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dos.Propose.pod_name)
}
inline ::std::string* Propose::mutable_pod_name() {
  set_has_pod_name();
  if (pod_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pod_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:dos.Propose.pod_name)
  return pod_name_;
}
inline ::std::string* Propose::release_pod_name() {
  clear_has_pod_name();
  if (pod_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = pod_name_;
    pod_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Propose::set_allocated_pod_name(::std::string* pod_name) {
  if (pod_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete pod_name_;
  }
  if (pod_name) {
    set_has_pod_name();
    pod_name_ = pod_name;
  } else {
    clear_has_pod_name();
    pod_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:dos.Propose.pod_name)
}

// optional string endpoint = 2;
inline bool Propose::has_endpoint() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Propose::set_has_endpoint() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Propose::clear_has_endpoint() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Propose::clear_endpoint() {
  if (endpoint_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    endpoint_->clear();
  }
  clear_has_endpoint();
}
inline const ::std::string& Propose::endpoint() const {
  // @@protoc_insertion_point(field_get:dos.Propose.endpoint)
  return *endpoint_;
}
inline void Propose::set_endpoint(const ::std::string& value) {
  set_has_endpoint();
  if (endpoint_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    endpoint_ = new ::std::string;
  }
  endpoint_->assign(value);
  // @@protoc_insertion_point(field_set:dos.Propose.endpoint)
}
inline void Propose::set_endpoint(const char* value) {
  set_has_endpoint();
  if (endpoint_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    endpoint_ = new ::std::string;
  }
  endpoint_->assign(value);
  // @@protoc_insertion_point(field_set_char:dos.Propose.endpoint)
}
inline void Propose::set_endpoint(const char* value, size_t size) {
  set_has_endpoint();
  if (endpoint_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    endpoint_ = new ::std::string;
  }
  endpoint_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dos.Propose.endpoint)
}
inline ::std::string* Propose::mutable_endpoint() {
  set_has_endpoint();
  if (endpoint_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    endpoint_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:dos.Propose.endpoint)
  return endpoint_;
}
inline ::std::string* Propose::release_endpoint() {
  clear_has_endpoint();
  if (endpoint_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = endpoint_;
    endpoint_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Propose::set_allocated_endpoint(::std::string* endpoint) {
  if (endpoint_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete endpoint_;
  }
  if (endpoint) {
    set_has_endpoint();
    endpoint_ = endpoint;
  } else {
    clear_has_endpoint();
    endpoint_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:dos.Propose.endpoint)
}

// -------------------------------------------------------------------

// ScaleUpProposeRequest

// repeated .dos.Propose proposes = 1;
inline int ScaleUpProposeRequest::proposes_size() const {
  return proposes_.size();
}
inline void ScaleUpProposeRequest::clear_proposes() {
  proposes_.Clear();
}
inline const ::dos::Propose& ScaleUpProposeRequest::proposes(int index) const {
  // @@protoc_insertion_point(field_get:dos.ScaleUpProposeRequest.proposes)
  return proposes_.Get(index);
}
inline ::dos::Propose* ScaleUpProposeRequest::mutable_proposes(int index) {
  // @@protoc_insertion_point(field_mutable:dos.ScaleUpProposeRequest.proposes)
  return proposes_.Mutable(index);
}
inline ::dos::Propose* ScaleUpProposeRequest::add_proposes() {
  // @@protoc_insertion_point(field_add:dos.ScaleUpProposeRequest.proposes)
  return proposes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dos::Propose >&
ScaleUpProposeRequest::proposes() const {
  // @@protoc_insertion_point(field_list:dos.ScaleUpProposeRequest.proposes)
  return proposes_;
}
inline ::google::protobuf::RepeatedPtrField< ::dos::Propose >*
ScaleUpProposeRequest::mutable_proposes() {
  // @@protoc_insertion_point(field_mutable_list:dos.ScaleUpProposeRequest.proposes)
  return &proposes_;
}

// -------------------------------------------------------------------

// ScaleUpProposeResponse

// optional .dos.RpcStatus status = 1;
inline bool ScaleUpProposeResponse::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ScaleUpProposeResponse::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ScaleUpProposeResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ScaleUpProposeResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::dos::RpcStatus ScaleUpProposeResponse::status() const {
  // @@protoc_insertion_point(field_get:dos.ScaleUpProposeResponse.status)
  return static_cast< ::dos::RpcStatus >(status_);
}
inline void ScaleUpProposeResponse::set_status(::dos::RpcStatus value) {
  assert(::dos::RpcStatus_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:dos.ScaleUpProposeResponse.status)
}

// -------------------------------------------------------------------

// JobOverview

// optional string name = 1;
inline bool JobOverview::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JobOverview::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JobOverview::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JobOverview::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& JobOverview::name() const {
  // @@protoc_insertion_point(field_get:dos.JobOverview.name)
  return *name_;
}
inline void JobOverview::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:dos.JobOverview.name)
}
inline void JobOverview::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:dos.JobOverview.name)
}
inline void JobOverview::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dos.JobOverview.name)
}
inline ::std::string* JobOverview::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:dos.JobOverview.name)
  return name_;
}
inline ::std::string* JobOverview::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void JobOverview::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:dos.JobOverview.name)
}

// optional uint32 running = 2;
inline bool JobOverview::has_running() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JobOverview::set_has_running() {
  _has_bits_[0] |= 0x00000002u;
}
inline void JobOverview::clear_has_running() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void JobOverview::clear_running() {
  running_ = 0u;
  clear_has_running();
}
inline ::google::protobuf::uint32 JobOverview::running() const {
  // @@protoc_insertion_point(field_get:dos.JobOverview.running)
  return running_;
}
inline void JobOverview::set_running(::google::protobuf::uint32 value) {
  set_has_running();
  running_ = value;
  // @@protoc_insertion_point(field_set:dos.JobOverview.running)
}

// optional uint32 death = 3;
inline bool JobOverview::has_death() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void JobOverview::set_has_death() {
  _has_bits_[0] |= 0x00000004u;
}
inline void JobOverview::clear_has_death() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void JobOverview::clear_death() {
  death_ = 0u;
  clear_has_death();
}
inline ::google::protobuf::uint32 JobOverview::death() const {
  // @@protoc_insertion_point(field_get:dos.JobOverview.death)
  return death_;
}
inline void JobOverview::set_death(::google::protobuf::uint32 value) {
  set_has_death();
  death_ = value;
  // @@protoc_insertion_point(field_set:dos.JobOverview.death)
}

// optional uint32 pending = 4;
inline bool JobOverview::has_pending() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void JobOverview::set_has_pending() {
  _has_bits_[0] |= 0x00000008u;
}
inline void JobOverview::clear_has_pending() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void JobOverview::clear_pending() {
  pending_ = 0u;
  clear_has_pending();
}
inline ::google::protobuf::uint32 JobOverview::pending() const {
  // @@protoc_insertion_point(field_get:dos.JobOverview.pending)
  return pending_;
}
inline void JobOverview::set_pending(::google::protobuf::uint32 value) {
  set_has_pending();
  pending_ = value;
  // @@protoc_insertion_point(field_set:dos.JobOverview.pending)
}

// optional uint32 replica = 5;
inline bool JobOverview::has_replica() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void JobOverview::set_has_replica() {
  _has_bits_[0] |= 0x00000010u;
}
inline void JobOverview::clear_has_replica() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void JobOverview::clear_replica() {
  replica_ = 0u;
  clear_has_replica();
}
inline ::google::protobuf::uint32 JobOverview::replica() const {
  // @@protoc_insertion_point(field_get:dos.JobOverview.replica)
  return replica_;
}
inline void JobOverview::set_replica(::google::protobuf::uint32 value) {
  set_has_replica();
  replica_ = value;
  // @@protoc_insertion_point(field_set:dos.JobOverview.replica)
}

// optional uint32 deploy_step = 6;
inline bool JobOverview::has_deploy_step() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void JobOverview::set_has_deploy_step() {
  _has_bits_[0] |= 0x00000020u;
}
inline void JobOverview::clear_has_deploy_step() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void JobOverview::clear_deploy_step() {
  deploy_step_ = 0u;
  clear_has_deploy_step();
}
inline ::google::protobuf::uint32 JobOverview::deploy_step() const {
  // @@protoc_insertion_point(field_get:dos.JobOverview.deploy_step)
  return deploy_step_;
}
inline void JobOverview::set_deploy_step(::google::protobuf::uint32 value) {
  set_has_deploy_step();
  deploy_step_ = value;
  // @@protoc_insertion_point(field_set:dos.JobOverview.deploy_step)
}

// optional string state = 7;
inline bool JobOverview::has_state() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void JobOverview::set_has_state() {
  _has_bits_[0] |= 0x00000040u;
}
inline void JobOverview::clear_has_state() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void JobOverview::clear_state() {
  if (state_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    state_->clear();
  }
  clear_has_state();
}
inline const ::std::string& JobOverview::state() const {
  // @@protoc_insertion_point(field_get:dos.JobOverview.state)
  return *state_;
}
inline void JobOverview::set_state(const ::std::string& value) {
  set_has_state();
  if (state_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    state_ = new ::std::string;
  }
  state_->assign(value);
  // @@protoc_insertion_point(field_set:dos.JobOverview.state)
}
inline void JobOverview::set_state(const char* value) {
  set_has_state();
  if (state_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    state_ = new ::std::string;
  }
  state_->assign(value);
  // @@protoc_insertion_point(field_set_char:dos.JobOverview.state)
}
inline void JobOverview::set_state(const char* value, size_t size) {
  set_has_state();
  if (state_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    state_ = new ::std::string;
  }
  state_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dos.JobOverview.state)
}
inline ::std::string* JobOverview::mutable_state() {
  set_has_state();
  if (state_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    state_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:dos.JobOverview.state)
  return state_;
}
inline ::std::string* JobOverview::release_state() {
  clear_has_state();
  if (state_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = state_;
    state_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void JobOverview::set_allocated_state(::std::string* state) {
  if (state_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete state_;
  }
  if (state) {
    set_has_state();
    state_ = state;
  } else {
    clear_has_state();
    state_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:dos.JobOverview.state)
}

// optional int64 ctime = 8;
inline bool JobOverview::has_ctime() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void JobOverview::set_has_ctime() {
  _has_bits_[0] |= 0x00000080u;
}
inline void JobOverview::clear_has_ctime() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void JobOverview::clear_ctime() {
  ctime_ = GOOGLE_LONGLONG(0);
  clear_has_ctime();
}
inline ::google::protobuf::int64 JobOverview::ctime() const {
  // @@protoc_insertion_point(field_get:dos.JobOverview.ctime)
  return ctime_;
}
inline void JobOverview::set_ctime(::google::protobuf::int64 value) {
  set_has_ctime();
  ctime_ = value;
  // @@protoc_insertion_point(field_set:dos.JobOverview.ctime)
}

// optional int64 utime = 9;
inline bool JobOverview::has_utime() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void JobOverview::set_has_utime() {
  _has_bits_[0] |= 0x00000100u;
}
inline void JobOverview::clear_has_utime() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void JobOverview::clear_utime() {
  utime_ = GOOGLE_LONGLONG(0);
  clear_has_utime();
}
inline ::google::protobuf::int64 JobOverview::utime() const {
  // @@protoc_insertion_point(field_get:dos.JobOverview.utime)
  return utime_;
}
inline void JobOverview::set_utime(::google::protobuf::int64 value) {
  set_has_utime();
  utime_ = value;
  // @@protoc_insertion_point(field_set:dos.JobOverview.utime)
}

// -------------------------------------------------------------------

// GetJobRequest

// optional string name = 1;
inline bool GetJobRequest::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetJobRequest::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetJobRequest::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetJobRequest::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& GetJobRequest::name() const {
  // @@protoc_insertion_point(field_get:dos.GetJobRequest.name)
  return *name_;
}
inline void GetJobRequest::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:dos.GetJobRequest.name)
}
inline void GetJobRequest::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:dos.GetJobRequest.name)
}
inline void GetJobRequest::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dos.GetJobRequest.name)
}
inline ::std::string* GetJobRequest::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:dos.GetJobRequest.name)
  return name_;
}
inline ::std::string* GetJobRequest::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetJobRequest::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:dos.GetJobRequest.name)
}

// -------------------------------------------------------------------

// GetJobResponse

// optional .dos.RpcStatus status = 1;
inline bool GetJobResponse::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetJobResponse::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetJobResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetJobResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::dos::RpcStatus GetJobResponse::status() const {
  // @@protoc_insertion_point(field_get:dos.GetJobResponse.status)
  return static_cast< ::dos::RpcStatus >(status_);
}
inline void GetJobResponse::set_status(::dos::RpcStatus value) {
  assert(::dos::RpcStatus_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:dos.GetJobResponse.status)
}

// optional .dos.JobOverview job = 2;
inline bool GetJobResponse::has_job() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetJobResponse::set_has_job() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetJobResponse::clear_has_job() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetJobResponse::clear_job() {
  if (job_ != NULL) job_->::dos::JobOverview::Clear();
  clear_has_job();
}
inline const ::dos::JobOverview& GetJobResponse::job() const {
  // @@protoc_insertion_point(field_get:dos.GetJobResponse.job)
  return job_ != NULL ? *job_ : *default_instance_->job_;
}
inline ::dos::JobOverview* GetJobResponse::mutable_job() {
  set_has_job();
  if (job_ == NULL) job_ = new ::dos::JobOverview;
  // @@protoc_insertion_point(field_mutable:dos.GetJobResponse.job)
  return job_;
}
inline ::dos::JobOverview* GetJobResponse::release_job() {
  clear_has_job();
  ::dos::JobOverview* temp = job_;
  job_ = NULL;
  return temp;
}
inline void GetJobResponse::set_allocated_job(::dos::JobOverview* job) {
  delete job_;
  job_ = job;
  if (job) {
    set_has_job();
  } else {
    clear_has_job();
  }
  // @@protoc_insertion_point(field_set_allocated:dos.GetJobResponse.job)
}

// -------------------------------------------------------------------

// KillJobRequest

// optional string name = 1;
inline bool KillJobRequest::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KillJobRequest::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KillJobRequest::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KillJobRequest::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& KillJobRequest::name() const {
  // @@protoc_insertion_point(field_get:dos.KillJobRequest.name)
  return *name_;
}
inline void KillJobRequest::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:dos.KillJobRequest.name)
}
inline void KillJobRequest::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:dos.KillJobRequest.name)
}
inline void KillJobRequest::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dos.KillJobRequest.name)
}
inline ::std::string* KillJobRequest::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:dos.KillJobRequest.name)
  return name_;
}
inline ::std::string* KillJobRequest::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void KillJobRequest::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:dos.KillJobRequest.name)
}

// -------------------------------------------------------------------

// KillJobResponse

// optional .dos.RpcStatus status = 1;
inline bool KillJobResponse::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KillJobResponse::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KillJobResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KillJobResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::dos::RpcStatus KillJobResponse::status() const {
  // @@protoc_insertion_point(field_get:dos.KillJobResponse.status)
  return static_cast< ::dos::RpcStatus >(status_);
}
inline void KillJobResponse::set_status(::dos::RpcStatus value) {
  assert(::dos::RpcStatus_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:dos.KillJobResponse.status)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace dos

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_master_2eproto__INCLUDED
