import "dos.proto";
import "engine.proto";

package dos;

option cc_generic_services = true;
option py_generic_services = true;

message HeartBeatRequest {
  optional string hostname = 1;
  optional string endpoint = 2;
}

message HeartBeatResponse {}

message SubmitJobRequest{
  optional string user_name = 1;
  optional JobSpec job = 2;
}

message SubmitJobResponse {
  optional RpcStatus status = 1; 
}

message Condition {
  // the type must match the types, empty ignore this property
  repeated PodType types = 1;
  // job containes some key words, empty ignore this property
  optional string job_name_contain = 2;
}

message GetScaleUpPodRequest {
  optional Condition condition = 1;
}

// Simple pod information for scaling up
message PodOverview {
  optional string name = 1;
  optional PodStatus status = 2;
  optional string job_name = 3;
  optional string endpoint = 4;
  repeated int32 ports = 5;
  optional Resource requirement = 6;
  optional PodType type = 7;
}

// get pods that need to be scheduled 
// and master will make a controll on 
// deploy step size 
message GetScaleUpPodResponse {
  repeated PodOverview pods = 1;
  optional RpcStatus status = 2;
}

message AgentOverview {
  optional string endpoint = 1;
  optional Resource resource = 2;
  repeated PodOverview pods = 3;
  optional int32 version = 4;
}

message AgentVersion {
  optional string endpoint = 1;
  optional int32 version = 2;
}

message SyncAgentInfoRequest {
  repeated AgentVersion versions = 1;
}

message SyncAgentInfoResponse {
  // should be deleted
  repeated string diff_del = 1;
  // add or mod
  repeated AgentOverview diff_mod = 2;
  optional RpcStatus status = 3;
}

message Propose {
  optional string pod_name = 1;
  optional string endpoint = 2;
}

message ScaleUpProposeRequest {
  repeated Propose proposes = 1;
}

message ScaleUpProposeResponse {
  optional RpcStatus status = 1;
}

message JobOverview {
  optional string name = 1;
  optional uint32 running = 2;
  optional uint32 death = 3;
  optional uint32 pending = 4;
  optional uint32 replica = 5;
  optional uint32 deploy_step = 6;
  optional string state = 7;
  optional int64 ctime = 8;
  optional int64 utime = 9;
  repeated PodOverview pods = 10;
  repeated ContainerOverview containers = 11;
}

message GetJobRequest {
  optional string name = 1;
}

message GetJobResponse {
  optional RpcStatus status = 1;
  optional JobOverview job = 2;
}

message KillJobRequest {
  optional string name = 1;
}

message KillJobResponse {
  optional RpcStatus status = 1;
}

service Master {
  // submit a job to master 
  rpc SubmitJob(SubmitJobRequest) returns(SubmitJobResponse);
  // heart beat from agent
  rpc HeartBeat(HeartBeatRequest) returns(HeartBeatResponse);
  // get pods that need scale up
  rpc GetScaleUpPod(GetScaleUpPodRequest) returns(GetScaleUpPodResponse);
  // scheduler sync agent infos from master
  rpc SyncAgentInfo(SyncAgentInfoRequest) returns(SyncAgentInfoResponse);
  // scale up propose from scheduler
  rpc ScaleUpPropose(ScaleUpProposeRequest) returns(ScaleUpProposeResponse);
  // show jobs in master
  rpc GetJob(GetJobRequest) returns(GetJobResponse);
  // kill job
  rpc KillJob(KillJobRequest) returns(KillJobResponse);
}
