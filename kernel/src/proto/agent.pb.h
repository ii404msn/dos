// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: agent.proto

#ifndef PROTOBUF_agent_2eproto__INCLUDED
#define PROTOBUF_agent_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
#include "dos.pb.h"
// @@protoc_insertion_point(includes)

namespace dos {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_agent_2eproto();
void protobuf_AssignDesc_agent_2eproto();
void protobuf_ShutdownFile_agent_2eproto();

class PollAgentRequest;
class PollAgentResponse;
class RunPodRequest;
class RunPodResponse;
class DeletePodRequest;
class DeletePodResponse;

// ===================================================================

class PollAgentRequest : public ::google::protobuf::Message {
 public:
  PollAgentRequest();
  virtual ~PollAgentRequest();

  PollAgentRequest(const PollAgentRequest& from);

  inline PollAgentRequest& operator=(const PollAgentRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PollAgentRequest& default_instance();

  void Swap(PollAgentRequest* other);

  // implements Message ----------------------------------------------

  PollAgentRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PollAgentRequest& from);
  void MergeFrom(const PollAgentRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:dos.PollAgentRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_agent_2eproto();
  friend void protobuf_AssignDesc_agent_2eproto();
  friend void protobuf_ShutdownFile_agent_2eproto();

  void InitAsDefaultInstance();
  static PollAgentRequest* default_instance_;
};
// -------------------------------------------------------------------

class PollAgentResponse : public ::google::protobuf::Message {
 public:
  PollAgentResponse();
  virtual ~PollAgentResponse();

  PollAgentResponse(const PollAgentResponse& from);

  inline PollAgentResponse& operator=(const PollAgentResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PollAgentResponse& default_instance();

  void Swap(PollAgentResponse* other);

  // implements Message ----------------------------------------------

  PollAgentResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PollAgentResponse& from);
  void MergeFrom(const PollAgentResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .dos.NodeStatus status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline const ::dos::NodeStatus& status() const;
  inline ::dos::NodeStatus* mutable_status();
  inline ::dos::NodeStatus* release_status();
  inline void set_allocated_status(::dos::NodeStatus* status);

  // @@protoc_insertion_point(class_scope:dos.PollAgentResponse)
 private:
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::dos::NodeStatus* status_;
  friend void  protobuf_AddDesc_agent_2eproto();
  friend void protobuf_AssignDesc_agent_2eproto();
  friend void protobuf_ShutdownFile_agent_2eproto();

  void InitAsDefaultInstance();
  static PollAgentResponse* default_instance_;
};
// -------------------------------------------------------------------

class RunPodRequest : public ::google::protobuf::Message {
 public:
  RunPodRequest();
  virtual ~RunPodRequest();

  RunPodRequest(const RunPodRequest& from);

  inline RunPodRequest& operator=(const RunPodRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RunPodRequest& default_instance();

  void Swap(RunPodRequest* other);

  // implements Message ----------------------------------------------

  RunPodRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RunPodRequest& from);
  void MergeFrom(const RunPodRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string pod_name = 1;
  inline bool has_pod_name() const;
  inline void clear_pod_name();
  static const int kPodNameFieldNumber = 1;
  inline const ::std::string& pod_name() const;
  inline void set_pod_name(const ::std::string& value);
  inline void set_pod_name(const char* value);
  inline void set_pod_name(const char* value, size_t size);
  inline ::std::string* mutable_pod_name();
  inline ::std::string* release_pod_name();
  inline void set_allocated_pod_name(::std::string* pod_name);

  // optional .dos.PodSpec pod = 3;
  inline bool has_pod() const;
  inline void clear_pod();
  static const int kPodFieldNumber = 3;
  inline const ::dos::PodSpec& pod() const;
  inline ::dos::PodSpec* mutable_pod();
  inline ::dos::PodSpec* release_pod();
  inline void set_allocated_pod(::dos::PodSpec* pod);

  // @@protoc_insertion_point(class_scope:dos.RunPodRequest)
 private:
  inline void set_has_pod_name();
  inline void clear_has_pod_name();
  inline void set_has_pod();
  inline void clear_has_pod();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* pod_name_;
  ::dos::PodSpec* pod_;
  friend void  protobuf_AddDesc_agent_2eproto();
  friend void protobuf_AssignDesc_agent_2eproto();
  friend void protobuf_ShutdownFile_agent_2eproto();

  void InitAsDefaultInstance();
  static RunPodRequest* default_instance_;
};
// -------------------------------------------------------------------

class RunPodResponse : public ::google::protobuf::Message {
 public:
  RunPodResponse();
  virtual ~RunPodResponse();

  RunPodResponse(const RunPodResponse& from);

  inline RunPodResponse& operator=(const RunPodResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RunPodResponse& default_instance();

  void Swap(RunPodResponse* other);

  // implements Message ----------------------------------------------

  RunPodResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RunPodResponse& from);
  void MergeFrom(const RunPodResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .dos.RpcStatus status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::dos::RpcStatus status() const;
  inline void set_status(::dos::RpcStatus value);

  // @@protoc_insertion_point(class_scope:dos.RunPodResponse)
 private:
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int status_;
  friend void  protobuf_AddDesc_agent_2eproto();
  friend void protobuf_AssignDesc_agent_2eproto();
  friend void protobuf_ShutdownFile_agent_2eproto();

  void InitAsDefaultInstance();
  static RunPodResponse* default_instance_;
};
// -------------------------------------------------------------------

class DeletePodRequest : public ::google::protobuf::Message {
 public:
  DeletePodRequest();
  virtual ~DeletePodRequest();

  DeletePodRequest(const DeletePodRequest& from);

  inline DeletePodRequest& operator=(const DeletePodRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeletePodRequest& default_instance();

  void Swap(DeletePodRequest* other);

  // implements Message ----------------------------------------------

  DeletePodRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeletePodRequest& from);
  void MergeFrom(const DeletePodRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:dos.DeletePodRequest)
 private:
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  friend void  protobuf_AddDesc_agent_2eproto();
  friend void protobuf_AssignDesc_agent_2eproto();
  friend void protobuf_ShutdownFile_agent_2eproto();

  void InitAsDefaultInstance();
  static DeletePodRequest* default_instance_;
};
// -------------------------------------------------------------------

class DeletePodResponse : public ::google::protobuf::Message {
 public:
  DeletePodResponse();
  virtual ~DeletePodResponse();

  DeletePodResponse(const DeletePodResponse& from);

  inline DeletePodResponse& operator=(const DeletePodResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeletePodResponse& default_instance();

  void Swap(DeletePodResponse* other);

  // implements Message ----------------------------------------------

  DeletePodResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeletePodResponse& from);
  void MergeFrom(const DeletePodResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .dos.RpcStatus status = 1;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 1;
  inline ::dos::RpcStatus status() const;
  inline void set_status(::dos::RpcStatus value);

  // @@protoc_insertion_point(class_scope:dos.DeletePodResponse)
 private:
  inline void set_has_status();
  inline void clear_has_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int status_;
  friend void  protobuf_AddDesc_agent_2eproto();
  friend void protobuf_AssignDesc_agent_2eproto();
  friend void protobuf_ShutdownFile_agent_2eproto();

  void InitAsDefaultInstance();
  static DeletePodResponse* default_instance_;
};
// ===================================================================

class Agent_Stub;

class Agent : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline Agent() {};
 public:
  virtual ~Agent();

  typedef Agent_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void Poll(::google::protobuf::RpcController* controller,
                       const ::dos::PollAgentRequest* request,
                       ::dos::PollAgentResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void Run(::google::protobuf::RpcController* controller,
                       const ::dos::RunPodRequest* request,
                       ::dos::RunPodResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void Delete(::google::protobuf::RpcController* controller,
                       const ::dos::DeletePodRequest* request,
                       ::dos::DeletePodResponse* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(Agent);
};

class Agent_Stub : public Agent {
 public:
  Agent_Stub(::google::protobuf::RpcChannel* channel);
  Agent_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~Agent_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements Agent ------------------------------------------

  void Poll(::google::protobuf::RpcController* controller,
                       const ::dos::PollAgentRequest* request,
                       ::dos::PollAgentResponse* response,
                       ::google::protobuf::Closure* done);
  void Run(::google::protobuf::RpcController* controller,
                       const ::dos::RunPodRequest* request,
                       ::dos::RunPodResponse* response,
                       ::google::protobuf::Closure* done);
  void Delete(::google::protobuf::RpcController* controller,
                       const ::dos::DeletePodRequest* request,
                       ::dos::DeletePodResponse* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(Agent_Stub);
};


// ===================================================================


// ===================================================================

// PollAgentRequest

// -------------------------------------------------------------------

// PollAgentResponse

// optional .dos.NodeStatus status = 1;
inline bool PollAgentResponse::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PollAgentResponse::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PollAgentResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PollAgentResponse::clear_status() {
  if (status_ != NULL) status_->::dos::NodeStatus::Clear();
  clear_has_status();
}
inline const ::dos::NodeStatus& PollAgentResponse::status() const {
  // @@protoc_insertion_point(field_get:dos.PollAgentResponse.status)
  return status_ != NULL ? *status_ : *default_instance_->status_;
}
inline ::dos::NodeStatus* PollAgentResponse::mutable_status() {
  set_has_status();
  if (status_ == NULL) status_ = new ::dos::NodeStatus;
  // @@protoc_insertion_point(field_mutable:dos.PollAgentResponse.status)
  return status_;
}
inline ::dos::NodeStatus* PollAgentResponse::release_status() {
  clear_has_status();
  ::dos::NodeStatus* temp = status_;
  status_ = NULL;
  return temp;
}
inline void PollAgentResponse::set_allocated_status(::dos::NodeStatus* status) {
  delete status_;
  status_ = status;
  if (status) {
    set_has_status();
  } else {
    clear_has_status();
  }
  // @@protoc_insertion_point(field_set_allocated:dos.PollAgentResponse.status)
}

// -------------------------------------------------------------------

// RunPodRequest

// optional string pod_name = 1;
inline bool RunPodRequest::has_pod_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RunPodRequest::set_has_pod_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RunPodRequest::clear_has_pod_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RunPodRequest::clear_pod_name() {
  if (pod_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pod_name_->clear();
  }
  clear_has_pod_name();
}
inline const ::std::string& RunPodRequest::pod_name() const {
  // @@protoc_insertion_point(field_get:dos.RunPodRequest.pod_name)
  return *pod_name_;
}
inline void RunPodRequest::set_pod_name(const ::std::string& value) {
  set_has_pod_name();
  if (pod_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pod_name_ = new ::std::string;
  }
  pod_name_->assign(value);
  // @@protoc_insertion_point(field_set:dos.RunPodRequest.pod_name)
}
inline void RunPodRequest::set_pod_name(const char* value) {
  set_has_pod_name();
  if (pod_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pod_name_ = new ::std::string;
  }
  pod_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:dos.RunPodRequest.pod_name)
}
inline void RunPodRequest::set_pod_name(const char* value, size_t size) {
  set_has_pod_name();
  if (pod_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pod_name_ = new ::std::string;
  }
  pod_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dos.RunPodRequest.pod_name)
}
inline ::std::string* RunPodRequest::mutable_pod_name() {
  set_has_pod_name();
  if (pod_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    pod_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:dos.RunPodRequest.pod_name)
  return pod_name_;
}
inline ::std::string* RunPodRequest::release_pod_name() {
  clear_has_pod_name();
  if (pod_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = pod_name_;
    pod_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RunPodRequest::set_allocated_pod_name(::std::string* pod_name) {
  if (pod_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete pod_name_;
  }
  if (pod_name) {
    set_has_pod_name();
    pod_name_ = pod_name;
  } else {
    clear_has_pod_name();
    pod_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:dos.RunPodRequest.pod_name)
}

// optional .dos.PodSpec pod = 3;
inline bool RunPodRequest::has_pod() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RunPodRequest::set_has_pod() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RunPodRequest::clear_has_pod() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RunPodRequest::clear_pod() {
  if (pod_ != NULL) pod_->::dos::PodSpec::Clear();
  clear_has_pod();
}
inline const ::dos::PodSpec& RunPodRequest::pod() const {
  // @@protoc_insertion_point(field_get:dos.RunPodRequest.pod)
  return pod_ != NULL ? *pod_ : *default_instance_->pod_;
}
inline ::dos::PodSpec* RunPodRequest::mutable_pod() {
  set_has_pod();
  if (pod_ == NULL) pod_ = new ::dos::PodSpec;
  // @@protoc_insertion_point(field_mutable:dos.RunPodRequest.pod)
  return pod_;
}
inline ::dos::PodSpec* RunPodRequest::release_pod() {
  clear_has_pod();
  ::dos::PodSpec* temp = pod_;
  pod_ = NULL;
  return temp;
}
inline void RunPodRequest::set_allocated_pod(::dos::PodSpec* pod) {
  delete pod_;
  pod_ = pod;
  if (pod) {
    set_has_pod();
  } else {
    clear_has_pod();
  }
  // @@protoc_insertion_point(field_set_allocated:dos.RunPodRequest.pod)
}

// -------------------------------------------------------------------

// RunPodResponse

// optional .dos.RpcStatus status = 1;
inline bool RunPodResponse::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RunPodResponse::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RunPodResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RunPodResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::dos::RpcStatus RunPodResponse::status() const {
  // @@protoc_insertion_point(field_get:dos.RunPodResponse.status)
  return static_cast< ::dos::RpcStatus >(status_);
}
inline void RunPodResponse::set_status(::dos::RpcStatus value) {
  assert(::dos::RpcStatus_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:dos.RunPodResponse.status)
}

// -------------------------------------------------------------------

// DeletePodRequest

// optional string name = 1;
inline bool DeletePodRequest::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeletePodRequest::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeletePodRequest::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeletePodRequest::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& DeletePodRequest::name() const {
  // @@protoc_insertion_point(field_get:dos.DeletePodRequest.name)
  return *name_;
}
inline void DeletePodRequest::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:dos.DeletePodRequest.name)
}
inline void DeletePodRequest::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:dos.DeletePodRequest.name)
}
inline void DeletePodRequest::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dos.DeletePodRequest.name)
}
inline ::std::string* DeletePodRequest::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:dos.DeletePodRequest.name)
  return name_;
}
inline ::std::string* DeletePodRequest::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void DeletePodRequest::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:dos.DeletePodRequest.name)
}

// -------------------------------------------------------------------

// DeletePodResponse

// optional .dos.RpcStatus status = 1;
inline bool DeletePodResponse::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeletePodResponse::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeletePodResponse::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeletePodResponse::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::dos::RpcStatus DeletePodResponse::status() const {
  // @@protoc_insertion_point(field_get:dos.DeletePodResponse.status)
  return static_cast< ::dos::RpcStatus >(status_);
}
inline void DeletePodResponse::set_status(::dos::RpcStatus value) {
  assert(::dos::RpcStatus_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:dos.DeletePodResponse.status)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace dos

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_agent_2eproto__INCLUDED
