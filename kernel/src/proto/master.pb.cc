// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: master.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "master.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace dos {

namespace {

const ::google::protobuf::Descriptor* HeartBeatRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HeartBeatRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* HeartBeatResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HeartBeatResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* SubmitJobRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SubmitJobRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* SubmitJobResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SubmitJobResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* Condition_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Condition_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetScaleUpPodRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetScaleUpPodRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* PodOverview_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PodOverview_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetScaleUpPodResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetScaleUpPodResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* AgentOverview_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AgentOverview_reflection_ = NULL;
const ::google::protobuf::Descriptor* AgentVersion_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AgentVersion_reflection_ = NULL;
const ::google::protobuf::Descriptor* SyncAgentInfoRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SyncAgentInfoRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* SyncAgentInfoResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SyncAgentInfoResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* Propose_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Propose_reflection_ = NULL;
const ::google::protobuf::Descriptor* ScaleUpProposeRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ScaleUpProposeRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ScaleUpProposeResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ScaleUpProposeResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* JobOverview_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  JobOverview_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetJobRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetJobRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetJobResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetJobResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* KillJobRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  KillJobRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* KillJobResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  KillJobResponse_reflection_ = NULL;
const ::google::protobuf::ServiceDescriptor* Master_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_master_2eproto() {
  protobuf_AddDesc_master_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "master.proto");
  GOOGLE_CHECK(file != NULL);
  HeartBeatRequest_descriptor_ = file->message_type(0);
  static const int HeartBeatRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartBeatRequest, hostname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartBeatRequest, endpoint_),
  };
  HeartBeatRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HeartBeatRequest_descriptor_,
      HeartBeatRequest::default_instance_,
      HeartBeatRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartBeatRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartBeatRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HeartBeatRequest));
  HeartBeatResponse_descriptor_ = file->message_type(1);
  static const int HeartBeatResponse_offsets_[1] = {
  };
  HeartBeatResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      HeartBeatResponse_descriptor_,
      HeartBeatResponse::default_instance_,
      HeartBeatResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartBeatResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartBeatResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(HeartBeatResponse));
  SubmitJobRequest_descriptor_ = file->message_type(2);
  static const int SubmitJobRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubmitJobRequest, user_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubmitJobRequest, job_),
  };
  SubmitJobRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SubmitJobRequest_descriptor_,
      SubmitJobRequest::default_instance_,
      SubmitJobRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubmitJobRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubmitJobRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SubmitJobRequest));
  SubmitJobResponse_descriptor_ = file->message_type(3);
  static const int SubmitJobResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubmitJobResponse, status_),
  };
  SubmitJobResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SubmitJobResponse_descriptor_,
      SubmitJobResponse::default_instance_,
      SubmitJobResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubmitJobResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubmitJobResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SubmitJobResponse));
  Condition_descriptor_ = file->message_type(4);
  static const int Condition_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Condition, types_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Condition, job_name_contain_),
  };
  Condition_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Condition_descriptor_,
      Condition::default_instance_,
      Condition_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Condition, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Condition, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Condition));
  GetScaleUpPodRequest_descriptor_ = file->message_type(5);
  static const int GetScaleUpPodRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetScaleUpPodRequest, condition_),
  };
  GetScaleUpPodRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetScaleUpPodRequest_descriptor_,
      GetScaleUpPodRequest::default_instance_,
      GetScaleUpPodRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetScaleUpPodRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetScaleUpPodRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetScaleUpPodRequest));
  PodOverview_descriptor_ = file->message_type(6);
  static const int PodOverview_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PodOverview, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PodOverview, requirement_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PodOverview, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PodOverview, job_name_),
  };
  PodOverview_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PodOverview_descriptor_,
      PodOverview::default_instance_,
      PodOverview_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PodOverview, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PodOverview, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PodOverview));
  GetScaleUpPodResponse_descriptor_ = file->message_type(7);
  static const int GetScaleUpPodResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetScaleUpPodResponse, pods_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetScaleUpPodResponse, status_),
  };
  GetScaleUpPodResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetScaleUpPodResponse_descriptor_,
      GetScaleUpPodResponse::default_instance_,
      GetScaleUpPodResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetScaleUpPodResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetScaleUpPodResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetScaleUpPodResponse));
  AgentOverview_descriptor_ = file->message_type(8);
  static const int AgentOverview_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AgentOverview, endpoint_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AgentOverview, resource_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AgentOverview, pods_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AgentOverview, version_),
  };
  AgentOverview_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AgentOverview_descriptor_,
      AgentOverview::default_instance_,
      AgentOverview_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AgentOverview, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AgentOverview, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AgentOverview));
  AgentVersion_descriptor_ = file->message_type(9);
  static const int AgentVersion_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AgentVersion, endpoint_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AgentVersion, version_),
  };
  AgentVersion_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AgentVersion_descriptor_,
      AgentVersion::default_instance_,
      AgentVersion_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AgentVersion, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AgentVersion, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AgentVersion));
  SyncAgentInfoRequest_descriptor_ = file->message_type(10);
  static const int SyncAgentInfoRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncAgentInfoRequest, versions_),
  };
  SyncAgentInfoRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SyncAgentInfoRequest_descriptor_,
      SyncAgentInfoRequest::default_instance_,
      SyncAgentInfoRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncAgentInfoRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncAgentInfoRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SyncAgentInfoRequest));
  SyncAgentInfoResponse_descriptor_ = file->message_type(11);
  static const int SyncAgentInfoResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncAgentInfoResponse, diff_del_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncAgentInfoResponse, diff_mod_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncAgentInfoResponse, status_),
  };
  SyncAgentInfoResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      SyncAgentInfoResponse_descriptor_,
      SyncAgentInfoResponse::default_instance_,
      SyncAgentInfoResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncAgentInfoResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncAgentInfoResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(SyncAgentInfoResponse));
  Propose_descriptor_ = file->message_type(12);
  static const int Propose_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Propose, pod_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Propose, endpoint_),
  };
  Propose_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Propose_descriptor_,
      Propose::default_instance_,
      Propose_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Propose, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Propose, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Propose));
  ScaleUpProposeRequest_descriptor_ = file->message_type(13);
  static const int ScaleUpProposeRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScaleUpProposeRequest, proposes_),
  };
  ScaleUpProposeRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ScaleUpProposeRequest_descriptor_,
      ScaleUpProposeRequest::default_instance_,
      ScaleUpProposeRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScaleUpProposeRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScaleUpProposeRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ScaleUpProposeRequest));
  ScaleUpProposeResponse_descriptor_ = file->message_type(14);
  static const int ScaleUpProposeResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScaleUpProposeResponse, status_),
  };
  ScaleUpProposeResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ScaleUpProposeResponse_descriptor_,
      ScaleUpProposeResponse::default_instance_,
      ScaleUpProposeResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScaleUpProposeResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ScaleUpProposeResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ScaleUpProposeResponse));
  JobOverview_descriptor_ = file->message_type(15);
  static const int JobOverview_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JobOverview, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JobOverview, running_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JobOverview, death_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JobOverview, pending_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JobOverview, replica_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JobOverview, deploy_step_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JobOverview, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JobOverview, ctime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JobOverview, utime_),
  };
  JobOverview_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      JobOverview_descriptor_,
      JobOverview::default_instance_,
      JobOverview_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JobOverview, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JobOverview, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(JobOverview));
  GetJobRequest_descriptor_ = file->message_type(16);
  static const int GetJobRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetJobRequest, name_),
  };
  GetJobRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetJobRequest_descriptor_,
      GetJobRequest::default_instance_,
      GetJobRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetJobRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetJobRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetJobRequest));
  GetJobResponse_descriptor_ = file->message_type(17);
  static const int GetJobResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetJobResponse, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetJobResponse, job_),
  };
  GetJobResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetJobResponse_descriptor_,
      GetJobResponse::default_instance_,
      GetJobResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetJobResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetJobResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetJobResponse));
  KillJobRequest_descriptor_ = file->message_type(18);
  static const int KillJobRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KillJobRequest, name_),
  };
  KillJobRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      KillJobRequest_descriptor_,
      KillJobRequest::default_instance_,
      KillJobRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KillJobRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KillJobRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(KillJobRequest));
  KillJobResponse_descriptor_ = file->message_type(19);
  static const int KillJobResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KillJobResponse, status_),
  };
  KillJobResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      KillJobResponse_descriptor_,
      KillJobResponse::default_instance_,
      KillJobResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KillJobResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KillJobResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(KillJobResponse));
  Master_descriptor_ = file->service(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_master_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HeartBeatRequest_descriptor_, &HeartBeatRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    HeartBeatResponse_descriptor_, &HeartBeatResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SubmitJobRequest_descriptor_, &SubmitJobRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SubmitJobResponse_descriptor_, &SubmitJobResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Condition_descriptor_, &Condition::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetScaleUpPodRequest_descriptor_, &GetScaleUpPodRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PodOverview_descriptor_, &PodOverview::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetScaleUpPodResponse_descriptor_, &GetScaleUpPodResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AgentOverview_descriptor_, &AgentOverview::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AgentVersion_descriptor_, &AgentVersion::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SyncAgentInfoRequest_descriptor_, &SyncAgentInfoRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    SyncAgentInfoResponse_descriptor_, &SyncAgentInfoResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Propose_descriptor_, &Propose::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ScaleUpProposeRequest_descriptor_, &ScaleUpProposeRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ScaleUpProposeResponse_descriptor_, &ScaleUpProposeResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    JobOverview_descriptor_, &JobOverview::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetJobRequest_descriptor_, &GetJobRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetJobResponse_descriptor_, &GetJobResponse::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    KillJobRequest_descriptor_, &KillJobRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    KillJobResponse_descriptor_, &KillJobResponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_master_2eproto() {
  delete HeartBeatRequest::default_instance_;
  delete HeartBeatRequest_reflection_;
  delete HeartBeatResponse::default_instance_;
  delete HeartBeatResponse_reflection_;
  delete SubmitJobRequest::default_instance_;
  delete SubmitJobRequest_reflection_;
  delete SubmitJobResponse::default_instance_;
  delete SubmitJobResponse_reflection_;
  delete Condition::default_instance_;
  delete Condition_reflection_;
  delete GetScaleUpPodRequest::default_instance_;
  delete GetScaleUpPodRequest_reflection_;
  delete PodOverview::default_instance_;
  delete PodOverview_reflection_;
  delete GetScaleUpPodResponse::default_instance_;
  delete GetScaleUpPodResponse_reflection_;
  delete AgentOverview::default_instance_;
  delete AgentOverview_reflection_;
  delete AgentVersion::default_instance_;
  delete AgentVersion_reflection_;
  delete SyncAgentInfoRequest::default_instance_;
  delete SyncAgentInfoRequest_reflection_;
  delete SyncAgentInfoResponse::default_instance_;
  delete SyncAgentInfoResponse_reflection_;
  delete Propose::default_instance_;
  delete Propose_reflection_;
  delete ScaleUpProposeRequest::default_instance_;
  delete ScaleUpProposeRequest_reflection_;
  delete ScaleUpProposeResponse::default_instance_;
  delete ScaleUpProposeResponse_reflection_;
  delete JobOverview::default_instance_;
  delete JobOverview_reflection_;
  delete GetJobRequest::default_instance_;
  delete GetJobRequest_reflection_;
  delete GetJobResponse::default_instance_;
  delete GetJobResponse_reflection_;
  delete KillJobRequest::default_instance_;
  delete KillJobRequest_reflection_;
  delete KillJobResponse::default_instance_;
  delete KillJobResponse_reflection_;
}

void protobuf_AddDesc_master_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::dos::protobuf_AddDesc_dos_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014master.proto\022\003dos\032\tdos.proto\"6\n\020HeartB"
    "eatRequest\022\020\n\010hostname\030\001 \001(\t\022\020\n\010endpoint"
    "\030\002 \001(\t\"\023\n\021HeartBeatResponse\"@\n\020SubmitJob"
    "Request\022\021\n\tuser_name\030\001 \001(\t\022\031\n\003job\030\002 \001(\0132"
    "\014.dos.JobSpec\"3\n\021SubmitJobResponse\022\036\n\006st"
    "atus\030\001 \001(\0162\016.dos.RpcStatus\"B\n\tCondition\022"
    "\033\n\005types\030\001 \003(\0162\014.dos.PodType\022\030\n\020job_name"
    "_contain\030\002 \001(\t\"9\n\024GetScaleUpPodRequest\022!"
    "\n\tcondition\030\001 \001(\0132\016.dos.Condition\"m\n\013Pod"
    "Overview\022\014\n\004name\030\001 \001(\t\022\"\n\013requirement\030\002 "
    "\001(\0132\r.dos.Resource\022\032\n\004type\030\003 \001(\0162\014.dos.P"
    "odType\022\020\n\010job_name\030\004 \001(\t\"W\n\025GetScaleUpPo"
    "dResponse\022\036\n\004pods\030\001 \003(\0132\020.dos.PodOvervie"
    "w\022\036\n\006status\030\002 \001(\0162\016.dos.RpcStatus\"s\n\rAge"
    "ntOverview\022\020\n\010endpoint\030\001 \001(\t\022\037\n\010resource"
    "\030\002 \001(\0132\r.dos.Resource\022\036\n\004pods\030\003 \003(\0132\020.do"
    "s.PodOverview\022\017\n\007version\030\004 \001(\005\"1\n\014AgentV"
    "ersion\022\020\n\010endpoint\030\001 \001(\t\022\017\n\007version\030\002 \001("
    "\005\";\n\024SyncAgentInfoRequest\022#\n\010versions\030\001 "
    "\003(\0132\021.dos.AgentVersion\"o\n\025SyncAgentInfoR"
    "esponse\022\020\n\010diff_del\030\001 \003(\t\022$\n\010diff_mod\030\002 "
    "\003(\0132\022.dos.AgentOverview\022\036\n\006status\030\003 \001(\0162"
    "\016.dos.RpcStatus\"-\n\007Propose\022\020\n\010pod_name\030\001"
    " \001(\t\022\020\n\010endpoint\030\002 \001(\t\"7\n\025ScaleUpPropose"
    "Request\022\036\n\010proposes\030\001 \003(\0132\014.dos.Propose\""
    "8\n\026ScaleUpProposeResponse\022\036\n\006status\030\001 \001("
    "\0162\016.dos.RpcStatus\"\237\001\n\013JobOverview\022\014\n\004nam"
    "e\030\001 \001(\t\022\017\n\007running\030\002 \001(\r\022\r\n\005death\030\003 \001(\r\022"
    "\017\n\007pending\030\004 \001(\r\022\017\n\007replica\030\005 \001(\r\022\023\n\013dep"
    "loy_step\030\006 \001(\r\022\r\n\005state\030\007 \001(\t\022\r\n\005ctime\030\010"
    " \001(\003\022\r\n\005utime\030\t \001(\003\"\035\n\rGetJobRequest\022\014\n\004"
    "name\030\001 \001(\t\"O\n\016GetJobResponse\022\036\n\006status\030\001"
    " \001(\0162\016.dos.RpcStatus\022\035\n\003job\030\002 \001(\0132\020.dos."
    "JobOverview\"\036\n\016KillJobRequest\022\014\n\004name\030\001 "
    "\001(\t\"1\n\017KillJobResponse\022\036\n\006status\030\001 \001(\0162\016"
    ".dos.RpcStatus2\304\003\n\006Master\022:\n\tSubmitJob\022\025"
    ".dos.SubmitJobRequest\032\026.dos.SubmitJobRes"
    "ponse\022:\n\tHeartBeat\022\025.dos.HeartBeatReques"
    "t\032\026.dos.HeartBeatResponse\022F\n\rGetScaleUpP"
    "od\022\031.dos.GetScaleUpPodRequest\032\032.dos.GetS"
    "caleUpPodResponse\022F\n\rSyncAgentInfo\022\031.dos"
    ".SyncAgentInfoRequest\032\032.dos.SyncAgentInf"
    "oResponse\022I\n\016ScaleUpPropose\022\032.dos.ScaleU"
    "pProposeRequest\032\033.dos.ScaleUpProposeResp"
    "onse\0221\n\006GetJob\022\022.dos.GetJobRequest\032\023.dos"
    ".GetJobResponse\0224\n\007KillJob\022\023.dos.KillJob"
    "Request\032\024.dos.KillJobResponseB\006\200\001\001\220\001\001", 1877);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "master.proto", &protobuf_RegisterTypes);
  HeartBeatRequest::default_instance_ = new HeartBeatRequest();
  HeartBeatResponse::default_instance_ = new HeartBeatResponse();
  SubmitJobRequest::default_instance_ = new SubmitJobRequest();
  SubmitJobResponse::default_instance_ = new SubmitJobResponse();
  Condition::default_instance_ = new Condition();
  GetScaleUpPodRequest::default_instance_ = new GetScaleUpPodRequest();
  PodOverview::default_instance_ = new PodOverview();
  GetScaleUpPodResponse::default_instance_ = new GetScaleUpPodResponse();
  AgentOverview::default_instance_ = new AgentOverview();
  AgentVersion::default_instance_ = new AgentVersion();
  SyncAgentInfoRequest::default_instance_ = new SyncAgentInfoRequest();
  SyncAgentInfoResponse::default_instance_ = new SyncAgentInfoResponse();
  Propose::default_instance_ = new Propose();
  ScaleUpProposeRequest::default_instance_ = new ScaleUpProposeRequest();
  ScaleUpProposeResponse::default_instance_ = new ScaleUpProposeResponse();
  JobOverview::default_instance_ = new JobOverview();
  GetJobRequest::default_instance_ = new GetJobRequest();
  GetJobResponse::default_instance_ = new GetJobResponse();
  KillJobRequest::default_instance_ = new KillJobRequest();
  KillJobResponse::default_instance_ = new KillJobResponse();
  HeartBeatRequest::default_instance_->InitAsDefaultInstance();
  HeartBeatResponse::default_instance_->InitAsDefaultInstance();
  SubmitJobRequest::default_instance_->InitAsDefaultInstance();
  SubmitJobResponse::default_instance_->InitAsDefaultInstance();
  Condition::default_instance_->InitAsDefaultInstance();
  GetScaleUpPodRequest::default_instance_->InitAsDefaultInstance();
  PodOverview::default_instance_->InitAsDefaultInstance();
  GetScaleUpPodResponse::default_instance_->InitAsDefaultInstance();
  AgentOverview::default_instance_->InitAsDefaultInstance();
  AgentVersion::default_instance_->InitAsDefaultInstance();
  SyncAgentInfoRequest::default_instance_->InitAsDefaultInstance();
  SyncAgentInfoResponse::default_instance_->InitAsDefaultInstance();
  Propose::default_instance_->InitAsDefaultInstance();
  ScaleUpProposeRequest::default_instance_->InitAsDefaultInstance();
  ScaleUpProposeResponse::default_instance_->InitAsDefaultInstance();
  JobOverview::default_instance_->InitAsDefaultInstance();
  GetJobRequest::default_instance_->InitAsDefaultInstance();
  GetJobResponse::default_instance_->InitAsDefaultInstance();
  KillJobRequest::default_instance_->InitAsDefaultInstance();
  KillJobResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_master_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_master_2eproto {
  StaticDescriptorInitializer_master_2eproto() {
    protobuf_AddDesc_master_2eproto();
  }
} static_descriptor_initializer_master_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int HeartBeatRequest::kHostnameFieldNumber;
const int HeartBeatRequest::kEndpointFieldNumber;
#endif  // !_MSC_VER

HeartBeatRequest::HeartBeatRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dos.HeartBeatRequest)
}

void HeartBeatRequest::InitAsDefaultInstance() {
}

HeartBeatRequest::HeartBeatRequest(const HeartBeatRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dos.HeartBeatRequest)
}

void HeartBeatRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  hostname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  endpoint_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HeartBeatRequest::~HeartBeatRequest() {
  // @@protoc_insertion_point(destructor:dos.HeartBeatRequest)
  SharedDtor();
}

void HeartBeatRequest::SharedDtor() {
  if (hostname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete hostname_;
  }
  if (endpoint_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete endpoint_;
  }
  if (this != default_instance_) {
  }
}

void HeartBeatRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeartBeatRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HeartBeatRequest_descriptor_;
}

const HeartBeatRequest& HeartBeatRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_master_2eproto();
  return *default_instance_;
}

HeartBeatRequest* HeartBeatRequest::default_instance_ = NULL;

HeartBeatRequest* HeartBeatRequest::New() const {
  return new HeartBeatRequest;
}

void HeartBeatRequest::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_hostname()) {
      if (hostname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        hostname_->clear();
      }
    }
    if (has_endpoint()) {
      if (endpoint_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        endpoint_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HeartBeatRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dos.HeartBeatRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string hostname = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hostname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->hostname().data(), this->hostname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "hostname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_endpoint;
        break;
      }

      // optional string endpoint = 2;
      case 2: {
        if (tag == 18) {
         parse_endpoint:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_endpoint()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->endpoint().data(), this->endpoint().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "endpoint");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dos.HeartBeatRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dos.HeartBeatRequest)
  return false;
#undef DO_
}

void HeartBeatRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dos.HeartBeatRequest)
  // optional string hostname = 1;
  if (has_hostname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hostname().data(), this->hostname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hostname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->hostname(), output);
  }

  // optional string endpoint = 2;
  if (has_endpoint()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->endpoint().data(), this->endpoint().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "endpoint");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->endpoint(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dos.HeartBeatRequest)
}

::google::protobuf::uint8* HeartBeatRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dos.HeartBeatRequest)
  // optional string hostname = 1;
  if (has_hostname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hostname().data(), this->hostname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "hostname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->hostname(), target);
  }

  // optional string endpoint = 2;
  if (has_endpoint()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->endpoint().data(), this->endpoint().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "endpoint");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->endpoint(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dos.HeartBeatRequest)
  return target;
}

int HeartBeatRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string hostname = 1;
    if (has_hostname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->hostname());
    }

    // optional string endpoint = 2;
    if (has_endpoint()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->endpoint());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeartBeatRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HeartBeatRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HeartBeatRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HeartBeatRequest::MergeFrom(const HeartBeatRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_hostname()) {
      set_hostname(from.hostname());
    }
    if (from.has_endpoint()) {
      set_endpoint(from.endpoint());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HeartBeatRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeartBeatRequest::CopyFrom(const HeartBeatRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeartBeatRequest::IsInitialized() const {

  return true;
}

void HeartBeatRequest::Swap(HeartBeatRequest* other) {
  if (other != this) {
    std::swap(hostname_, other->hostname_);
    std::swap(endpoint_, other->endpoint_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HeartBeatRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HeartBeatRequest_descriptor_;
  metadata.reflection = HeartBeatRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

HeartBeatResponse::HeartBeatResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dos.HeartBeatResponse)
}

void HeartBeatResponse::InitAsDefaultInstance() {
}

HeartBeatResponse::HeartBeatResponse(const HeartBeatResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dos.HeartBeatResponse)
}

void HeartBeatResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HeartBeatResponse::~HeartBeatResponse() {
  // @@protoc_insertion_point(destructor:dos.HeartBeatResponse)
  SharedDtor();
}

void HeartBeatResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HeartBeatResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeartBeatResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HeartBeatResponse_descriptor_;
}

const HeartBeatResponse& HeartBeatResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_master_2eproto();
  return *default_instance_;
}

HeartBeatResponse* HeartBeatResponse::default_instance_ = NULL;

HeartBeatResponse* HeartBeatResponse::New() const {
  return new HeartBeatResponse;
}

void HeartBeatResponse::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool HeartBeatResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dos.HeartBeatResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:dos.HeartBeatResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dos.HeartBeatResponse)
  return false;
#undef DO_
}

void HeartBeatResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dos.HeartBeatResponse)
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dos.HeartBeatResponse)
}

::google::protobuf::uint8* HeartBeatResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dos.HeartBeatResponse)
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dos.HeartBeatResponse)
  return target;
}

int HeartBeatResponse::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeartBeatResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const HeartBeatResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const HeartBeatResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HeartBeatResponse::MergeFrom(const HeartBeatResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void HeartBeatResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeartBeatResponse::CopyFrom(const HeartBeatResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeartBeatResponse::IsInitialized() const {

  return true;
}

void HeartBeatResponse::Swap(HeartBeatResponse* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata HeartBeatResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HeartBeatResponse_descriptor_;
  metadata.reflection = HeartBeatResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SubmitJobRequest::kUserNameFieldNumber;
const int SubmitJobRequest::kJobFieldNumber;
#endif  // !_MSC_VER

SubmitJobRequest::SubmitJobRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dos.SubmitJobRequest)
}

void SubmitJobRequest::InitAsDefaultInstance() {
  job_ = const_cast< ::dos::JobSpec*>(&::dos::JobSpec::default_instance());
}

SubmitJobRequest::SubmitJobRequest(const SubmitJobRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dos.SubmitJobRequest)
}

void SubmitJobRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  user_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  job_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SubmitJobRequest::~SubmitJobRequest() {
  // @@protoc_insertion_point(destructor:dos.SubmitJobRequest)
  SharedDtor();
}

void SubmitJobRequest::SharedDtor() {
  if (user_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete user_name_;
  }
  if (this != default_instance_) {
    delete job_;
  }
}

void SubmitJobRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubmitJobRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SubmitJobRequest_descriptor_;
}

const SubmitJobRequest& SubmitJobRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_master_2eproto();
  return *default_instance_;
}

SubmitJobRequest* SubmitJobRequest::default_instance_ = NULL;

SubmitJobRequest* SubmitJobRequest::New() const {
  return new SubmitJobRequest;
}

void SubmitJobRequest::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_user_name()) {
      if (user_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        user_name_->clear();
      }
    }
    if (has_job()) {
      if (job_ != NULL) job_->::dos::JobSpec::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SubmitJobRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dos.SubmitJobRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string user_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->user_name().data(), this->user_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "user_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_job;
        break;
      }

      // optional .dos.JobSpec job = 2;
      case 2: {
        if (tag == 18) {
         parse_job:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_job()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dos.SubmitJobRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dos.SubmitJobRequest)
  return false;
#undef DO_
}

void SubmitJobRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dos.SubmitJobRequest)
  // optional string user_name = 1;
  if (has_user_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_name().data(), this->user_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "user_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_name(), output);
  }

  // optional .dos.JobSpec job = 2;
  if (has_job()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->job(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dos.SubmitJobRequest)
}

::google::protobuf::uint8* SubmitJobRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dos.SubmitJobRequest)
  // optional string user_name = 1;
  if (has_user_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_name().data(), this->user_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "user_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_name(), target);
  }

  // optional .dos.JobSpec job = 2;
  if (has_job()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->job(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dos.SubmitJobRequest)
  return target;
}

int SubmitJobRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string user_name = 1;
    if (has_user_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->user_name());
    }

    // optional .dos.JobSpec job = 2;
    if (has_job()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->job());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SubmitJobRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SubmitJobRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SubmitJobRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SubmitJobRequest::MergeFrom(const SubmitJobRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_user_name()) {
      set_user_name(from.user_name());
    }
    if (from.has_job()) {
      mutable_job()->::dos::JobSpec::MergeFrom(from.job());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SubmitJobRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubmitJobRequest::CopyFrom(const SubmitJobRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubmitJobRequest::IsInitialized() const {

  return true;
}

void SubmitJobRequest::Swap(SubmitJobRequest* other) {
  if (other != this) {
    std::swap(user_name_, other->user_name_);
    std::swap(job_, other->job_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SubmitJobRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SubmitJobRequest_descriptor_;
  metadata.reflection = SubmitJobRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SubmitJobResponse::kStatusFieldNumber;
#endif  // !_MSC_VER

SubmitJobResponse::SubmitJobResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dos.SubmitJobResponse)
}

void SubmitJobResponse::InitAsDefaultInstance() {
}

SubmitJobResponse::SubmitJobResponse(const SubmitJobResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dos.SubmitJobResponse)
}

void SubmitJobResponse::SharedCtor() {
  _cached_size_ = 0;
  status_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SubmitJobResponse::~SubmitJobResponse() {
  // @@protoc_insertion_point(destructor:dos.SubmitJobResponse)
  SharedDtor();
}

void SubmitJobResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SubmitJobResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubmitJobResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SubmitJobResponse_descriptor_;
}

const SubmitJobResponse& SubmitJobResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_master_2eproto();
  return *default_instance_;
}

SubmitJobResponse* SubmitJobResponse::default_instance_ = NULL;

SubmitJobResponse* SubmitJobResponse::New() const {
  return new SubmitJobResponse;
}

void SubmitJobResponse::Clear() {
  status_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SubmitJobResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dos.SubmitJobResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .dos.RpcStatus status = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::dos::RpcStatus_IsValid(value)) {
            set_status(static_cast< ::dos::RpcStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dos.SubmitJobResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dos.SubmitJobResponse)
  return false;
#undef DO_
}

void SubmitJobResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dos.SubmitJobResponse)
  // optional .dos.RpcStatus status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dos.SubmitJobResponse)
}

::google::protobuf::uint8* SubmitJobResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dos.SubmitJobResponse)
  // optional .dos.RpcStatus status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dos.SubmitJobResponse)
  return target;
}

int SubmitJobResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .dos.RpcStatus status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SubmitJobResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SubmitJobResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SubmitJobResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SubmitJobResponse::MergeFrom(const SubmitJobResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SubmitJobResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubmitJobResponse::CopyFrom(const SubmitJobResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubmitJobResponse::IsInitialized() const {

  return true;
}

void SubmitJobResponse::Swap(SubmitJobResponse* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SubmitJobResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SubmitJobResponse_descriptor_;
  metadata.reflection = SubmitJobResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Condition::kTypesFieldNumber;
const int Condition::kJobNameContainFieldNumber;
#endif  // !_MSC_VER

Condition::Condition()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dos.Condition)
}

void Condition::InitAsDefaultInstance() {
}

Condition::Condition(const Condition& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dos.Condition)
}

void Condition::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  job_name_contain_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Condition::~Condition() {
  // @@protoc_insertion_point(destructor:dos.Condition)
  SharedDtor();
}

void Condition::SharedDtor() {
  if (job_name_contain_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete job_name_contain_;
  }
  if (this != default_instance_) {
  }
}

void Condition::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Condition::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Condition_descriptor_;
}

const Condition& Condition::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_master_2eproto();
  return *default_instance_;
}

Condition* Condition::default_instance_ = NULL;

Condition* Condition::New() const {
  return new Condition;
}

void Condition::Clear() {
  if (has_job_name_contain()) {
    if (job_name_contain_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      job_name_contain_->clear();
    }
  }
  types_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Condition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dos.Condition)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .dos.PodType types = 1;
      case 1: {
        if (tag == 8) {
         parse_types:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::dos::PodType_IsValid(value)) {
            add_types(static_cast< ::dos::PodType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedEnumNoInline(
                 input,
                 &::dos::PodType_IsValid,
                 this->mutable_types())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_types;
        if (input->ExpectTag(18)) goto parse_job_name_contain;
        break;
      }

      // optional string job_name_contain = 2;
      case 2: {
        if (tag == 18) {
         parse_job_name_contain:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_job_name_contain()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->job_name_contain().data(), this->job_name_contain().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "job_name_contain");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dos.Condition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dos.Condition)
  return false;
#undef DO_
}

void Condition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dos.Condition)
  // repeated .dos.PodType types = 1;
  for (int i = 0; i < this->types_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->types(i), output);
  }

  // optional string job_name_contain = 2;
  if (has_job_name_contain()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->job_name_contain().data(), this->job_name_contain().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "job_name_contain");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->job_name_contain(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dos.Condition)
}

::google::protobuf::uint8* Condition::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dos.Condition)
  // repeated .dos.PodType types = 1;
  for (int i = 0; i < this->types_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->types(i), target);
  }

  // optional string job_name_contain = 2;
  if (has_job_name_contain()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->job_name_contain().data(), this->job_name_contain().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "job_name_contain");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->job_name_contain(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dos.Condition)
  return target;
}

int Condition::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional string job_name_contain = 2;
    if (has_job_name_contain()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->job_name_contain());
    }

  }
  // repeated .dos.PodType types = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->types_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->types(i));
    }
    total_size += 1 * this->types_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Condition::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Condition* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Condition*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Condition::MergeFrom(const Condition& from) {
  GOOGLE_CHECK_NE(&from, this);
  types_.MergeFrom(from.types_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_job_name_contain()) {
      set_job_name_contain(from.job_name_contain());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Condition::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Condition::CopyFrom(const Condition& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Condition::IsInitialized() const {

  return true;
}

void Condition::Swap(Condition* other) {
  if (other != this) {
    types_.Swap(&other->types_);
    std::swap(job_name_contain_, other->job_name_contain_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Condition::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Condition_descriptor_;
  metadata.reflection = Condition_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetScaleUpPodRequest::kConditionFieldNumber;
#endif  // !_MSC_VER

GetScaleUpPodRequest::GetScaleUpPodRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dos.GetScaleUpPodRequest)
}

void GetScaleUpPodRequest::InitAsDefaultInstance() {
  condition_ = const_cast< ::dos::Condition*>(&::dos::Condition::default_instance());
}

GetScaleUpPodRequest::GetScaleUpPodRequest(const GetScaleUpPodRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dos.GetScaleUpPodRequest)
}

void GetScaleUpPodRequest::SharedCtor() {
  _cached_size_ = 0;
  condition_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetScaleUpPodRequest::~GetScaleUpPodRequest() {
  // @@protoc_insertion_point(destructor:dos.GetScaleUpPodRequest)
  SharedDtor();
}

void GetScaleUpPodRequest::SharedDtor() {
  if (this != default_instance_) {
    delete condition_;
  }
}

void GetScaleUpPodRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetScaleUpPodRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetScaleUpPodRequest_descriptor_;
}

const GetScaleUpPodRequest& GetScaleUpPodRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_master_2eproto();
  return *default_instance_;
}

GetScaleUpPodRequest* GetScaleUpPodRequest::default_instance_ = NULL;

GetScaleUpPodRequest* GetScaleUpPodRequest::New() const {
  return new GetScaleUpPodRequest;
}

void GetScaleUpPodRequest::Clear() {
  if (has_condition()) {
    if (condition_ != NULL) condition_->::dos::Condition::Clear();
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetScaleUpPodRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dos.GetScaleUpPodRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .dos.Condition condition = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_condition()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dos.GetScaleUpPodRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dos.GetScaleUpPodRequest)
  return false;
#undef DO_
}

void GetScaleUpPodRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dos.GetScaleUpPodRequest)
  // optional .dos.Condition condition = 1;
  if (has_condition()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->condition(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dos.GetScaleUpPodRequest)
}

::google::protobuf::uint8* GetScaleUpPodRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dos.GetScaleUpPodRequest)
  // optional .dos.Condition condition = 1;
  if (has_condition()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->condition(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dos.GetScaleUpPodRequest)
  return target;
}

int GetScaleUpPodRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .dos.Condition condition = 1;
    if (has_condition()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->condition());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetScaleUpPodRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetScaleUpPodRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetScaleUpPodRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetScaleUpPodRequest::MergeFrom(const GetScaleUpPodRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_condition()) {
      mutable_condition()->::dos::Condition::MergeFrom(from.condition());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetScaleUpPodRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetScaleUpPodRequest::CopyFrom(const GetScaleUpPodRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetScaleUpPodRequest::IsInitialized() const {

  return true;
}

void GetScaleUpPodRequest::Swap(GetScaleUpPodRequest* other) {
  if (other != this) {
    std::swap(condition_, other->condition_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetScaleUpPodRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetScaleUpPodRequest_descriptor_;
  metadata.reflection = GetScaleUpPodRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int PodOverview::kNameFieldNumber;
const int PodOverview::kRequirementFieldNumber;
const int PodOverview::kTypeFieldNumber;
const int PodOverview::kJobNameFieldNumber;
#endif  // !_MSC_VER

PodOverview::PodOverview()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dos.PodOverview)
}

void PodOverview::InitAsDefaultInstance() {
  requirement_ = const_cast< ::dos::Resource*>(&::dos::Resource::default_instance());
}

PodOverview::PodOverview(const PodOverview& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dos.PodOverview)
}

void PodOverview::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  requirement_ = NULL;
  type_ = 0;
  job_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PodOverview::~PodOverview() {
  // @@protoc_insertion_point(destructor:dos.PodOverview)
  SharedDtor();
}

void PodOverview::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (job_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete job_name_;
  }
  if (this != default_instance_) {
    delete requirement_;
  }
}

void PodOverview::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PodOverview::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PodOverview_descriptor_;
}

const PodOverview& PodOverview::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_master_2eproto();
  return *default_instance_;
}

PodOverview* PodOverview::default_instance_ = NULL;

PodOverview* PodOverview::New() const {
  return new PodOverview;
}

void PodOverview::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    if (has_requirement()) {
      if (requirement_ != NULL) requirement_->::dos::Resource::Clear();
    }
    type_ = 0;
    if (has_job_name()) {
      if (job_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        job_name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PodOverview::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dos.PodOverview)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_requirement;
        break;
      }

      // optional .dos.Resource requirement = 2;
      case 2: {
        if (tag == 18) {
         parse_requirement:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_requirement()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_type;
        break;
      }

      // optional .dos.PodType type = 3;
      case 3: {
        if (tag == 24) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::dos::PodType_IsValid(value)) {
            set_type(static_cast< ::dos::PodType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_job_name;
        break;
      }

      // optional string job_name = 4;
      case 4: {
        if (tag == 34) {
         parse_job_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_job_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->job_name().data(), this->job_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "job_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dos.PodOverview)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dos.PodOverview)
  return false;
#undef DO_
}

void PodOverview::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dos.PodOverview)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional .dos.Resource requirement = 2;
  if (has_requirement()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->requirement(), output);
  }

  // optional .dos.PodType type = 3;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->type(), output);
  }

  // optional string job_name = 4;
  if (has_job_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->job_name().data(), this->job_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "job_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->job_name(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dos.PodOverview)
}

::google::protobuf::uint8* PodOverview::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dos.PodOverview)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional .dos.Resource requirement = 2;
  if (has_requirement()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->requirement(), target);
  }

  // optional .dos.PodType type = 3;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->type(), target);
  }

  // optional string job_name = 4;
  if (has_job_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->job_name().data(), this->job_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "job_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->job_name(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dos.PodOverview)
  return target;
}

int PodOverview::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional .dos.Resource requirement = 2;
    if (has_requirement()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->requirement());
    }

    // optional .dos.PodType type = 3;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // optional string job_name = 4;
    if (has_job_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->job_name());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PodOverview::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PodOverview* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PodOverview*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PodOverview::MergeFrom(const PodOverview& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_requirement()) {
      mutable_requirement()->::dos::Resource::MergeFrom(from.requirement());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_job_name()) {
      set_job_name(from.job_name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PodOverview::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PodOverview::CopyFrom(const PodOverview& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PodOverview::IsInitialized() const {

  return true;
}

void PodOverview::Swap(PodOverview* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(requirement_, other->requirement_);
    std::swap(type_, other->type_);
    std::swap(job_name_, other->job_name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PodOverview::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PodOverview_descriptor_;
  metadata.reflection = PodOverview_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetScaleUpPodResponse::kPodsFieldNumber;
const int GetScaleUpPodResponse::kStatusFieldNumber;
#endif  // !_MSC_VER

GetScaleUpPodResponse::GetScaleUpPodResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dos.GetScaleUpPodResponse)
}

void GetScaleUpPodResponse::InitAsDefaultInstance() {
}

GetScaleUpPodResponse::GetScaleUpPodResponse(const GetScaleUpPodResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dos.GetScaleUpPodResponse)
}

void GetScaleUpPodResponse::SharedCtor() {
  _cached_size_ = 0;
  status_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetScaleUpPodResponse::~GetScaleUpPodResponse() {
  // @@protoc_insertion_point(destructor:dos.GetScaleUpPodResponse)
  SharedDtor();
}

void GetScaleUpPodResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GetScaleUpPodResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetScaleUpPodResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetScaleUpPodResponse_descriptor_;
}

const GetScaleUpPodResponse& GetScaleUpPodResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_master_2eproto();
  return *default_instance_;
}

GetScaleUpPodResponse* GetScaleUpPodResponse::default_instance_ = NULL;

GetScaleUpPodResponse* GetScaleUpPodResponse::New() const {
  return new GetScaleUpPodResponse;
}

void GetScaleUpPodResponse::Clear() {
  status_ = 0;
  pods_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetScaleUpPodResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dos.GetScaleUpPodResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .dos.PodOverview pods = 1;
      case 1: {
        if (tag == 10) {
         parse_pods:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_pods()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_pods;
        if (input->ExpectTag(16)) goto parse_status;
        break;
      }

      // optional .dos.RpcStatus status = 2;
      case 2: {
        if (tag == 16) {
         parse_status:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::dos::RpcStatus_IsValid(value)) {
            set_status(static_cast< ::dos::RpcStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dos.GetScaleUpPodResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dos.GetScaleUpPodResponse)
  return false;
#undef DO_
}

void GetScaleUpPodResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dos.GetScaleUpPodResponse)
  // repeated .dos.PodOverview pods = 1;
  for (int i = 0; i < this->pods_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->pods(i), output);
  }

  // optional .dos.RpcStatus status = 2;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->status(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dos.GetScaleUpPodResponse)
}

::google::protobuf::uint8* GetScaleUpPodResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dos.GetScaleUpPodResponse)
  // repeated .dos.PodOverview pods = 1;
  for (int i = 0; i < this->pods_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->pods(i), target);
  }

  // optional .dos.RpcStatus status = 2;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->status(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dos.GetScaleUpPodResponse)
  return target;
}

int GetScaleUpPodResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // optional .dos.RpcStatus status = 2;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

  }
  // repeated .dos.PodOverview pods = 1;
  total_size += 1 * this->pods_size();
  for (int i = 0; i < this->pods_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->pods(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetScaleUpPodResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetScaleUpPodResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetScaleUpPodResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetScaleUpPodResponse::MergeFrom(const GetScaleUpPodResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  pods_.MergeFrom(from.pods_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetScaleUpPodResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetScaleUpPodResponse::CopyFrom(const GetScaleUpPodResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetScaleUpPodResponse::IsInitialized() const {

  return true;
}

void GetScaleUpPodResponse::Swap(GetScaleUpPodResponse* other) {
  if (other != this) {
    pods_.Swap(&other->pods_);
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetScaleUpPodResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetScaleUpPodResponse_descriptor_;
  metadata.reflection = GetScaleUpPodResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AgentOverview::kEndpointFieldNumber;
const int AgentOverview::kResourceFieldNumber;
const int AgentOverview::kPodsFieldNumber;
const int AgentOverview::kVersionFieldNumber;
#endif  // !_MSC_VER

AgentOverview::AgentOverview()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dos.AgentOverview)
}

void AgentOverview::InitAsDefaultInstance() {
  resource_ = const_cast< ::dos::Resource*>(&::dos::Resource::default_instance());
}

AgentOverview::AgentOverview(const AgentOverview& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dos.AgentOverview)
}

void AgentOverview::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  endpoint_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resource_ = NULL;
  version_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AgentOverview::~AgentOverview() {
  // @@protoc_insertion_point(destructor:dos.AgentOverview)
  SharedDtor();
}

void AgentOverview::SharedDtor() {
  if (endpoint_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete endpoint_;
  }
  if (this != default_instance_) {
    delete resource_;
  }
}

void AgentOverview::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AgentOverview::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AgentOverview_descriptor_;
}

const AgentOverview& AgentOverview::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_master_2eproto();
  return *default_instance_;
}

AgentOverview* AgentOverview::default_instance_ = NULL;

AgentOverview* AgentOverview::New() const {
  return new AgentOverview;
}

void AgentOverview::Clear() {
  if (_has_bits_[0 / 32] & 11) {
    if (has_endpoint()) {
      if (endpoint_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        endpoint_->clear();
      }
    }
    if (has_resource()) {
      if (resource_ != NULL) resource_->::dos::Resource::Clear();
    }
    version_ = 0;
  }
  pods_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AgentOverview::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dos.AgentOverview)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string endpoint = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_endpoint()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->endpoint().data(), this->endpoint().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "endpoint");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_resource;
        break;
      }

      // optional .dos.Resource resource = 2;
      case 2: {
        if (tag == 18) {
         parse_resource:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_resource()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_pods;
        break;
      }

      // repeated .dos.PodOverview pods = 3;
      case 3: {
        if (tag == 26) {
         parse_pods:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_pods()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_pods;
        if (input->ExpectTag(32)) goto parse_version;
        break;
      }

      // optional int32 version = 4;
      case 4: {
        if (tag == 32) {
         parse_version:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &version_)));
          set_has_version();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dos.AgentOverview)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dos.AgentOverview)
  return false;
#undef DO_
}

void AgentOverview::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dos.AgentOverview)
  // optional string endpoint = 1;
  if (has_endpoint()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->endpoint().data(), this->endpoint().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "endpoint");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->endpoint(), output);
  }

  // optional .dos.Resource resource = 2;
  if (has_resource()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->resource(), output);
  }

  // repeated .dos.PodOverview pods = 3;
  for (int i = 0; i < this->pods_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->pods(i), output);
  }

  // optional int32 version = 4;
  if (has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->version(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dos.AgentOverview)
}

::google::protobuf::uint8* AgentOverview::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dos.AgentOverview)
  // optional string endpoint = 1;
  if (has_endpoint()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->endpoint().data(), this->endpoint().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "endpoint");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->endpoint(), target);
  }

  // optional .dos.Resource resource = 2;
  if (has_resource()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->resource(), target);
  }

  // repeated .dos.PodOverview pods = 3;
  for (int i = 0; i < this->pods_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->pods(i), target);
  }

  // optional int32 version = 4;
  if (has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->version(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dos.AgentOverview)
  return target;
}

int AgentOverview::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string endpoint = 1;
    if (has_endpoint()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->endpoint());
    }

    // optional .dos.Resource resource = 2;
    if (has_resource()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->resource());
    }

    // optional int32 version = 4;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->version());
    }

  }
  // repeated .dos.PodOverview pods = 3;
  total_size += 1 * this->pods_size();
  for (int i = 0; i < this->pods_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->pods(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AgentOverview::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AgentOverview* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AgentOverview*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AgentOverview::MergeFrom(const AgentOverview& from) {
  GOOGLE_CHECK_NE(&from, this);
  pods_.MergeFrom(from.pods_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_endpoint()) {
      set_endpoint(from.endpoint());
    }
    if (from.has_resource()) {
      mutable_resource()->::dos::Resource::MergeFrom(from.resource());
    }
    if (from.has_version()) {
      set_version(from.version());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AgentOverview::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AgentOverview::CopyFrom(const AgentOverview& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgentOverview::IsInitialized() const {

  return true;
}

void AgentOverview::Swap(AgentOverview* other) {
  if (other != this) {
    std::swap(endpoint_, other->endpoint_);
    std::swap(resource_, other->resource_);
    pods_.Swap(&other->pods_);
    std::swap(version_, other->version_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AgentOverview::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AgentOverview_descriptor_;
  metadata.reflection = AgentOverview_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AgentVersion::kEndpointFieldNumber;
const int AgentVersion::kVersionFieldNumber;
#endif  // !_MSC_VER

AgentVersion::AgentVersion()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dos.AgentVersion)
}

void AgentVersion::InitAsDefaultInstance() {
}

AgentVersion::AgentVersion(const AgentVersion& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dos.AgentVersion)
}

void AgentVersion::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  endpoint_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AgentVersion::~AgentVersion() {
  // @@protoc_insertion_point(destructor:dos.AgentVersion)
  SharedDtor();
}

void AgentVersion::SharedDtor() {
  if (endpoint_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete endpoint_;
  }
  if (this != default_instance_) {
  }
}

void AgentVersion::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AgentVersion::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AgentVersion_descriptor_;
}

const AgentVersion& AgentVersion::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_master_2eproto();
  return *default_instance_;
}

AgentVersion* AgentVersion::default_instance_ = NULL;

AgentVersion* AgentVersion::New() const {
  return new AgentVersion;
}

void AgentVersion::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_endpoint()) {
      if (endpoint_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        endpoint_->clear();
      }
    }
    version_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AgentVersion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dos.AgentVersion)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string endpoint = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_endpoint()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->endpoint().data(), this->endpoint().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "endpoint");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_version;
        break;
      }

      // optional int32 version = 2;
      case 2: {
        if (tag == 16) {
         parse_version:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &version_)));
          set_has_version();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dos.AgentVersion)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dos.AgentVersion)
  return false;
#undef DO_
}

void AgentVersion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dos.AgentVersion)
  // optional string endpoint = 1;
  if (has_endpoint()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->endpoint().data(), this->endpoint().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "endpoint");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->endpoint(), output);
  }

  // optional int32 version = 2;
  if (has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->version(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dos.AgentVersion)
}

::google::protobuf::uint8* AgentVersion::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dos.AgentVersion)
  // optional string endpoint = 1;
  if (has_endpoint()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->endpoint().data(), this->endpoint().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "endpoint");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->endpoint(), target);
  }

  // optional int32 version = 2;
  if (has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->version(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dos.AgentVersion)
  return target;
}

int AgentVersion::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string endpoint = 1;
    if (has_endpoint()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->endpoint());
    }

    // optional int32 version = 2;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->version());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AgentVersion::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AgentVersion* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AgentVersion*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AgentVersion::MergeFrom(const AgentVersion& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_endpoint()) {
      set_endpoint(from.endpoint());
    }
    if (from.has_version()) {
      set_version(from.version());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AgentVersion::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AgentVersion::CopyFrom(const AgentVersion& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AgentVersion::IsInitialized() const {

  return true;
}

void AgentVersion::Swap(AgentVersion* other) {
  if (other != this) {
    std::swap(endpoint_, other->endpoint_);
    std::swap(version_, other->version_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AgentVersion::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AgentVersion_descriptor_;
  metadata.reflection = AgentVersion_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SyncAgentInfoRequest::kVersionsFieldNumber;
#endif  // !_MSC_VER

SyncAgentInfoRequest::SyncAgentInfoRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dos.SyncAgentInfoRequest)
}

void SyncAgentInfoRequest::InitAsDefaultInstance() {
}

SyncAgentInfoRequest::SyncAgentInfoRequest(const SyncAgentInfoRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dos.SyncAgentInfoRequest)
}

void SyncAgentInfoRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SyncAgentInfoRequest::~SyncAgentInfoRequest() {
  // @@protoc_insertion_point(destructor:dos.SyncAgentInfoRequest)
  SharedDtor();
}

void SyncAgentInfoRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SyncAgentInfoRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SyncAgentInfoRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SyncAgentInfoRequest_descriptor_;
}

const SyncAgentInfoRequest& SyncAgentInfoRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_master_2eproto();
  return *default_instance_;
}

SyncAgentInfoRequest* SyncAgentInfoRequest::default_instance_ = NULL;

SyncAgentInfoRequest* SyncAgentInfoRequest::New() const {
  return new SyncAgentInfoRequest;
}

void SyncAgentInfoRequest::Clear() {
  versions_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SyncAgentInfoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dos.SyncAgentInfoRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .dos.AgentVersion versions = 1;
      case 1: {
        if (tag == 10) {
         parse_versions:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_versions()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_versions;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dos.SyncAgentInfoRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dos.SyncAgentInfoRequest)
  return false;
#undef DO_
}

void SyncAgentInfoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dos.SyncAgentInfoRequest)
  // repeated .dos.AgentVersion versions = 1;
  for (int i = 0; i < this->versions_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->versions(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dos.SyncAgentInfoRequest)
}

::google::protobuf::uint8* SyncAgentInfoRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dos.SyncAgentInfoRequest)
  // repeated .dos.AgentVersion versions = 1;
  for (int i = 0; i < this->versions_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->versions(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dos.SyncAgentInfoRequest)
  return target;
}

int SyncAgentInfoRequest::ByteSize() const {
  int total_size = 0;

  // repeated .dos.AgentVersion versions = 1;
  total_size += 1 * this->versions_size();
  for (int i = 0; i < this->versions_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->versions(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SyncAgentInfoRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SyncAgentInfoRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SyncAgentInfoRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SyncAgentInfoRequest::MergeFrom(const SyncAgentInfoRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  versions_.MergeFrom(from.versions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SyncAgentInfoRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncAgentInfoRequest::CopyFrom(const SyncAgentInfoRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncAgentInfoRequest::IsInitialized() const {

  return true;
}

void SyncAgentInfoRequest::Swap(SyncAgentInfoRequest* other) {
  if (other != this) {
    versions_.Swap(&other->versions_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SyncAgentInfoRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SyncAgentInfoRequest_descriptor_;
  metadata.reflection = SyncAgentInfoRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int SyncAgentInfoResponse::kDiffDelFieldNumber;
const int SyncAgentInfoResponse::kDiffModFieldNumber;
const int SyncAgentInfoResponse::kStatusFieldNumber;
#endif  // !_MSC_VER

SyncAgentInfoResponse::SyncAgentInfoResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dos.SyncAgentInfoResponse)
}

void SyncAgentInfoResponse::InitAsDefaultInstance() {
}

SyncAgentInfoResponse::SyncAgentInfoResponse(const SyncAgentInfoResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dos.SyncAgentInfoResponse)
}

void SyncAgentInfoResponse::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  status_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SyncAgentInfoResponse::~SyncAgentInfoResponse() {
  // @@protoc_insertion_point(destructor:dos.SyncAgentInfoResponse)
  SharedDtor();
}

void SyncAgentInfoResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SyncAgentInfoResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SyncAgentInfoResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SyncAgentInfoResponse_descriptor_;
}

const SyncAgentInfoResponse& SyncAgentInfoResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_master_2eproto();
  return *default_instance_;
}

SyncAgentInfoResponse* SyncAgentInfoResponse::default_instance_ = NULL;

SyncAgentInfoResponse* SyncAgentInfoResponse::New() const {
  return new SyncAgentInfoResponse;
}

void SyncAgentInfoResponse::Clear() {
  status_ = 0;
  diff_del_.Clear();
  diff_mod_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool SyncAgentInfoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dos.SyncAgentInfoResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string diff_del = 1;
      case 1: {
        if (tag == 10) {
         parse_diff_del:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_diff_del()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->diff_del(this->diff_del_size() - 1).data(),
            this->diff_del(this->diff_del_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "diff_del");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_diff_del;
        if (input->ExpectTag(18)) goto parse_diff_mod;
        break;
      }

      // repeated .dos.AgentOverview diff_mod = 2;
      case 2: {
        if (tag == 18) {
         parse_diff_mod:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_diff_mod()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_diff_mod;
        if (input->ExpectTag(24)) goto parse_status;
        break;
      }

      // optional .dos.RpcStatus status = 3;
      case 3: {
        if (tag == 24) {
         parse_status:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::dos::RpcStatus_IsValid(value)) {
            set_status(static_cast< ::dos::RpcStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dos.SyncAgentInfoResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dos.SyncAgentInfoResponse)
  return false;
#undef DO_
}

void SyncAgentInfoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dos.SyncAgentInfoResponse)
  // repeated string diff_del = 1;
  for (int i = 0; i < this->diff_del_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->diff_del(i).data(), this->diff_del(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "diff_del");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->diff_del(i), output);
  }

  // repeated .dos.AgentOverview diff_mod = 2;
  for (int i = 0; i < this->diff_mod_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->diff_mod(i), output);
  }

  // optional .dos.RpcStatus status = 3;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->status(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dos.SyncAgentInfoResponse)
}

::google::protobuf::uint8* SyncAgentInfoResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dos.SyncAgentInfoResponse)
  // repeated string diff_del = 1;
  for (int i = 0; i < this->diff_del_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->diff_del(i).data(), this->diff_del(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "diff_del");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->diff_del(i), target);
  }

  // repeated .dos.AgentOverview diff_mod = 2;
  for (int i = 0; i < this->diff_mod_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->diff_mod(i), target);
  }

  // optional .dos.RpcStatus status = 3;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->status(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dos.SyncAgentInfoResponse)
  return target;
}

int SyncAgentInfoResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    // optional .dos.RpcStatus status = 3;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

  }
  // repeated string diff_del = 1;
  total_size += 1 * this->diff_del_size();
  for (int i = 0; i < this->diff_del_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->diff_del(i));
  }

  // repeated .dos.AgentOverview diff_mod = 2;
  total_size += 1 * this->diff_mod_size();
  for (int i = 0; i < this->diff_mod_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->diff_mod(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SyncAgentInfoResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const SyncAgentInfoResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const SyncAgentInfoResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void SyncAgentInfoResponse::MergeFrom(const SyncAgentInfoResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  diff_del_.MergeFrom(from.diff_del_);
  diff_mod_.MergeFrom(from.diff_mod_);
  if (from._has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void SyncAgentInfoResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncAgentInfoResponse::CopyFrom(const SyncAgentInfoResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncAgentInfoResponse::IsInitialized() const {

  return true;
}

void SyncAgentInfoResponse::Swap(SyncAgentInfoResponse* other) {
  if (other != this) {
    diff_del_.Swap(&other->diff_del_);
    diff_mod_.Swap(&other->diff_mod_);
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata SyncAgentInfoResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SyncAgentInfoResponse_descriptor_;
  metadata.reflection = SyncAgentInfoResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Propose::kPodNameFieldNumber;
const int Propose::kEndpointFieldNumber;
#endif  // !_MSC_VER

Propose::Propose()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dos.Propose)
}

void Propose::InitAsDefaultInstance() {
}

Propose::Propose(const Propose& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dos.Propose)
}

void Propose::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  pod_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  endpoint_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Propose::~Propose() {
  // @@protoc_insertion_point(destructor:dos.Propose)
  SharedDtor();
}

void Propose::SharedDtor() {
  if (pod_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete pod_name_;
  }
  if (endpoint_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete endpoint_;
  }
  if (this != default_instance_) {
  }
}

void Propose::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Propose::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Propose_descriptor_;
}

const Propose& Propose::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_master_2eproto();
  return *default_instance_;
}

Propose* Propose::default_instance_ = NULL;

Propose* Propose::New() const {
  return new Propose;
}

void Propose::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_pod_name()) {
      if (pod_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        pod_name_->clear();
      }
    }
    if (has_endpoint()) {
      if (endpoint_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        endpoint_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Propose::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dos.Propose)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string pod_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pod_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->pod_name().data(), this->pod_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "pod_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_endpoint;
        break;
      }

      // optional string endpoint = 2;
      case 2: {
        if (tag == 18) {
         parse_endpoint:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_endpoint()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->endpoint().data(), this->endpoint().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "endpoint");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dos.Propose)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dos.Propose)
  return false;
#undef DO_
}

void Propose::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dos.Propose)
  // optional string pod_name = 1;
  if (has_pod_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pod_name().data(), this->pod_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pod_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->pod_name(), output);
  }

  // optional string endpoint = 2;
  if (has_endpoint()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->endpoint().data(), this->endpoint().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "endpoint");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->endpoint(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dos.Propose)
}

::google::protobuf::uint8* Propose::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dos.Propose)
  // optional string pod_name = 1;
  if (has_pod_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pod_name().data(), this->pod_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "pod_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->pod_name(), target);
  }

  // optional string endpoint = 2;
  if (has_endpoint()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->endpoint().data(), this->endpoint().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "endpoint");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->endpoint(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dos.Propose)
  return target;
}

int Propose::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string pod_name = 1;
    if (has_pod_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->pod_name());
    }

    // optional string endpoint = 2;
    if (has_endpoint()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->endpoint());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Propose::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Propose* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Propose*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Propose::MergeFrom(const Propose& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pod_name()) {
      set_pod_name(from.pod_name());
    }
    if (from.has_endpoint()) {
      set_endpoint(from.endpoint());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Propose::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Propose::CopyFrom(const Propose& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Propose::IsInitialized() const {

  return true;
}

void Propose::Swap(Propose* other) {
  if (other != this) {
    std::swap(pod_name_, other->pod_name_);
    std::swap(endpoint_, other->endpoint_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Propose::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Propose_descriptor_;
  metadata.reflection = Propose_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ScaleUpProposeRequest::kProposesFieldNumber;
#endif  // !_MSC_VER

ScaleUpProposeRequest::ScaleUpProposeRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dos.ScaleUpProposeRequest)
}

void ScaleUpProposeRequest::InitAsDefaultInstance() {
}

ScaleUpProposeRequest::ScaleUpProposeRequest(const ScaleUpProposeRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dos.ScaleUpProposeRequest)
}

void ScaleUpProposeRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ScaleUpProposeRequest::~ScaleUpProposeRequest() {
  // @@protoc_insertion_point(destructor:dos.ScaleUpProposeRequest)
  SharedDtor();
}

void ScaleUpProposeRequest::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ScaleUpProposeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ScaleUpProposeRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ScaleUpProposeRequest_descriptor_;
}

const ScaleUpProposeRequest& ScaleUpProposeRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_master_2eproto();
  return *default_instance_;
}

ScaleUpProposeRequest* ScaleUpProposeRequest::default_instance_ = NULL;

ScaleUpProposeRequest* ScaleUpProposeRequest::New() const {
  return new ScaleUpProposeRequest;
}

void ScaleUpProposeRequest::Clear() {
  proposes_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ScaleUpProposeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dos.ScaleUpProposeRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .dos.Propose proposes = 1;
      case 1: {
        if (tag == 10) {
         parse_proposes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_proposes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_proposes;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dos.ScaleUpProposeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dos.ScaleUpProposeRequest)
  return false;
#undef DO_
}

void ScaleUpProposeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dos.ScaleUpProposeRequest)
  // repeated .dos.Propose proposes = 1;
  for (int i = 0; i < this->proposes_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->proposes(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dos.ScaleUpProposeRequest)
}

::google::protobuf::uint8* ScaleUpProposeRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dos.ScaleUpProposeRequest)
  // repeated .dos.Propose proposes = 1;
  for (int i = 0; i < this->proposes_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->proposes(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dos.ScaleUpProposeRequest)
  return target;
}

int ScaleUpProposeRequest::ByteSize() const {
  int total_size = 0;

  // repeated .dos.Propose proposes = 1;
  total_size += 1 * this->proposes_size();
  for (int i = 0; i < this->proposes_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->proposes(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ScaleUpProposeRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ScaleUpProposeRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ScaleUpProposeRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ScaleUpProposeRequest::MergeFrom(const ScaleUpProposeRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  proposes_.MergeFrom(from.proposes_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ScaleUpProposeRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScaleUpProposeRequest::CopyFrom(const ScaleUpProposeRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScaleUpProposeRequest::IsInitialized() const {

  return true;
}

void ScaleUpProposeRequest::Swap(ScaleUpProposeRequest* other) {
  if (other != this) {
    proposes_.Swap(&other->proposes_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ScaleUpProposeRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ScaleUpProposeRequest_descriptor_;
  metadata.reflection = ScaleUpProposeRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ScaleUpProposeResponse::kStatusFieldNumber;
#endif  // !_MSC_VER

ScaleUpProposeResponse::ScaleUpProposeResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dos.ScaleUpProposeResponse)
}

void ScaleUpProposeResponse::InitAsDefaultInstance() {
}

ScaleUpProposeResponse::ScaleUpProposeResponse(const ScaleUpProposeResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dos.ScaleUpProposeResponse)
}

void ScaleUpProposeResponse::SharedCtor() {
  _cached_size_ = 0;
  status_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ScaleUpProposeResponse::~ScaleUpProposeResponse() {
  // @@protoc_insertion_point(destructor:dos.ScaleUpProposeResponse)
  SharedDtor();
}

void ScaleUpProposeResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ScaleUpProposeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ScaleUpProposeResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ScaleUpProposeResponse_descriptor_;
}

const ScaleUpProposeResponse& ScaleUpProposeResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_master_2eproto();
  return *default_instance_;
}

ScaleUpProposeResponse* ScaleUpProposeResponse::default_instance_ = NULL;

ScaleUpProposeResponse* ScaleUpProposeResponse::New() const {
  return new ScaleUpProposeResponse;
}

void ScaleUpProposeResponse::Clear() {
  status_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ScaleUpProposeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dos.ScaleUpProposeResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .dos.RpcStatus status = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::dos::RpcStatus_IsValid(value)) {
            set_status(static_cast< ::dos::RpcStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dos.ScaleUpProposeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dos.ScaleUpProposeResponse)
  return false;
#undef DO_
}

void ScaleUpProposeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dos.ScaleUpProposeResponse)
  // optional .dos.RpcStatus status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dos.ScaleUpProposeResponse)
}

::google::protobuf::uint8* ScaleUpProposeResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dos.ScaleUpProposeResponse)
  // optional .dos.RpcStatus status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dos.ScaleUpProposeResponse)
  return target;
}

int ScaleUpProposeResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .dos.RpcStatus status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ScaleUpProposeResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ScaleUpProposeResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ScaleUpProposeResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ScaleUpProposeResponse::MergeFrom(const ScaleUpProposeResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ScaleUpProposeResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScaleUpProposeResponse::CopyFrom(const ScaleUpProposeResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScaleUpProposeResponse::IsInitialized() const {

  return true;
}

void ScaleUpProposeResponse::Swap(ScaleUpProposeResponse* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ScaleUpProposeResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ScaleUpProposeResponse_descriptor_;
  metadata.reflection = ScaleUpProposeResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int JobOverview::kNameFieldNumber;
const int JobOverview::kRunningFieldNumber;
const int JobOverview::kDeathFieldNumber;
const int JobOverview::kPendingFieldNumber;
const int JobOverview::kReplicaFieldNumber;
const int JobOverview::kDeployStepFieldNumber;
const int JobOverview::kStateFieldNumber;
const int JobOverview::kCtimeFieldNumber;
const int JobOverview::kUtimeFieldNumber;
#endif  // !_MSC_VER

JobOverview::JobOverview()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dos.JobOverview)
}

void JobOverview::InitAsDefaultInstance() {
}

JobOverview::JobOverview(const JobOverview& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dos.JobOverview)
}

void JobOverview::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  running_ = 0u;
  death_ = 0u;
  pending_ = 0u;
  replica_ = 0u;
  deploy_step_ = 0u;
  state_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ctime_ = GOOGLE_LONGLONG(0);
  utime_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

JobOverview::~JobOverview() {
  // @@protoc_insertion_point(destructor:dos.JobOverview)
  SharedDtor();
}

void JobOverview::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (state_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete state_;
  }
  if (this != default_instance_) {
  }
}

void JobOverview::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JobOverview::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return JobOverview_descriptor_;
}

const JobOverview& JobOverview::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_master_2eproto();
  return *default_instance_;
}

JobOverview* JobOverview::default_instance_ = NULL;

JobOverview* JobOverview::New() const {
  return new JobOverview;
}

void JobOverview::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<JobOverview*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    ZR_(running_, replica_);
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    deploy_step_ = 0u;
    if (has_state()) {
      if (state_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        state_->clear();
      }
    }
    ctime_ = GOOGLE_LONGLONG(0);
  }
  utime_ = GOOGLE_LONGLONG(0);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool JobOverview::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dos.JobOverview)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_running;
        break;
      }

      // optional uint32 running = 2;
      case 2: {
        if (tag == 16) {
         parse_running:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &running_)));
          set_has_running();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_death;
        break;
      }

      // optional uint32 death = 3;
      case 3: {
        if (tag == 24) {
         parse_death:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &death_)));
          set_has_death();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_pending;
        break;
      }

      // optional uint32 pending = 4;
      case 4: {
        if (tag == 32) {
         parse_pending:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pending_)));
          set_has_pending();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_replica;
        break;
      }

      // optional uint32 replica = 5;
      case 5: {
        if (tag == 40) {
         parse_replica:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &replica_)));
          set_has_replica();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_deploy_step;
        break;
      }

      // optional uint32 deploy_step = 6;
      case 6: {
        if (tag == 48) {
         parse_deploy_step:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &deploy_step_)));
          set_has_deploy_step();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_state;
        break;
      }

      // optional string state = 7;
      case 7: {
        if (tag == 58) {
         parse_state:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_state()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->state().data(), this->state().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "state");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_ctime;
        break;
      }

      // optional int64 ctime = 8;
      case 8: {
        if (tag == 64) {
         parse_ctime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ctime_)));
          set_has_ctime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_utime;
        break;
      }

      // optional int64 utime = 9;
      case 9: {
        if (tag == 72) {
         parse_utime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &utime_)));
          set_has_utime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dos.JobOverview)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dos.JobOverview)
  return false;
#undef DO_
}

void JobOverview::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dos.JobOverview)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional uint32 running = 2;
  if (has_running()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->running(), output);
  }

  // optional uint32 death = 3;
  if (has_death()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->death(), output);
  }

  // optional uint32 pending = 4;
  if (has_pending()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->pending(), output);
  }

  // optional uint32 replica = 5;
  if (has_replica()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->replica(), output);
  }

  // optional uint32 deploy_step = 6;
  if (has_deploy_step()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->deploy_step(), output);
  }

  // optional string state = 7;
  if (has_state()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->state().data(), this->state().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "state");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->state(), output);
  }

  // optional int64 ctime = 8;
  if (has_ctime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(8, this->ctime(), output);
  }

  // optional int64 utime = 9;
  if (has_utime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->utime(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dos.JobOverview)
}

::google::protobuf::uint8* JobOverview::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dos.JobOverview)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional uint32 running = 2;
  if (has_running()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->running(), target);
  }

  // optional uint32 death = 3;
  if (has_death()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->death(), target);
  }

  // optional uint32 pending = 4;
  if (has_pending()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->pending(), target);
  }

  // optional uint32 replica = 5;
  if (has_replica()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->replica(), target);
  }

  // optional uint32 deploy_step = 6;
  if (has_deploy_step()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->deploy_step(), target);
  }

  // optional string state = 7;
  if (has_state()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->state().data(), this->state().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "state");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->state(), target);
  }

  // optional int64 ctime = 8;
  if (has_ctime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(8, this->ctime(), target);
  }

  // optional int64 utime = 9;
  if (has_utime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->utime(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dos.JobOverview)
  return target;
}

int JobOverview::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional uint32 running = 2;
    if (has_running()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->running());
    }

    // optional uint32 death = 3;
    if (has_death()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->death());
    }

    // optional uint32 pending = 4;
    if (has_pending()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pending());
    }

    // optional uint32 replica = 5;
    if (has_replica()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->replica());
    }

    // optional uint32 deploy_step = 6;
    if (has_deploy_step()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->deploy_step());
    }

    // optional string state = 7;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->state());
    }

    // optional int64 ctime = 8;
    if (has_ctime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->ctime());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional int64 utime = 9;
    if (has_utime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->utime());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JobOverview::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const JobOverview* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const JobOverview*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void JobOverview::MergeFrom(const JobOverview& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_running()) {
      set_running(from.running());
    }
    if (from.has_death()) {
      set_death(from.death());
    }
    if (from.has_pending()) {
      set_pending(from.pending());
    }
    if (from.has_replica()) {
      set_replica(from.replica());
    }
    if (from.has_deploy_step()) {
      set_deploy_step(from.deploy_step());
    }
    if (from.has_state()) {
      set_state(from.state());
    }
    if (from.has_ctime()) {
      set_ctime(from.ctime());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_utime()) {
      set_utime(from.utime());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void JobOverview::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JobOverview::CopyFrom(const JobOverview& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JobOverview::IsInitialized() const {

  return true;
}

void JobOverview::Swap(JobOverview* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(running_, other->running_);
    std::swap(death_, other->death_);
    std::swap(pending_, other->pending_);
    std::swap(replica_, other->replica_);
    std::swap(deploy_step_, other->deploy_step_);
    std::swap(state_, other->state_);
    std::swap(ctime_, other->ctime_);
    std::swap(utime_, other->utime_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata JobOverview::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = JobOverview_descriptor_;
  metadata.reflection = JobOverview_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetJobRequest::kNameFieldNumber;
#endif  // !_MSC_VER

GetJobRequest::GetJobRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dos.GetJobRequest)
}

void GetJobRequest::InitAsDefaultInstance() {
}

GetJobRequest::GetJobRequest(const GetJobRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dos.GetJobRequest)
}

void GetJobRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetJobRequest::~GetJobRequest() {
  // @@protoc_insertion_point(destructor:dos.GetJobRequest)
  SharedDtor();
}

void GetJobRequest::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void GetJobRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetJobRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetJobRequest_descriptor_;
}

const GetJobRequest& GetJobRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_master_2eproto();
  return *default_instance_;
}

GetJobRequest* GetJobRequest::default_instance_ = NULL;

GetJobRequest* GetJobRequest::New() const {
  return new GetJobRequest;
}

void GetJobRequest::Clear() {
  if (has_name()) {
    if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      name_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetJobRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dos.GetJobRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dos.GetJobRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dos.GetJobRequest)
  return false;
#undef DO_
}

void GetJobRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dos.GetJobRequest)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dos.GetJobRequest)
}

::google::protobuf::uint8* GetJobRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dos.GetJobRequest)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dos.GetJobRequest)
  return target;
}

int GetJobRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetJobRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetJobRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetJobRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetJobRequest::MergeFrom(const GetJobRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetJobRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetJobRequest::CopyFrom(const GetJobRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetJobRequest::IsInitialized() const {

  return true;
}

void GetJobRequest::Swap(GetJobRequest* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetJobRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetJobRequest_descriptor_;
  metadata.reflection = GetJobRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetJobResponse::kStatusFieldNumber;
const int GetJobResponse::kJobFieldNumber;
#endif  // !_MSC_VER

GetJobResponse::GetJobResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dos.GetJobResponse)
}

void GetJobResponse::InitAsDefaultInstance() {
  job_ = const_cast< ::dos::JobOverview*>(&::dos::JobOverview::default_instance());
}

GetJobResponse::GetJobResponse(const GetJobResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dos.GetJobResponse)
}

void GetJobResponse::SharedCtor() {
  _cached_size_ = 0;
  status_ = 0;
  job_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetJobResponse::~GetJobResponse() {
  // @@protoc_insertion_point(destructor:dos.GetJobResponse)
  SharedDtor();
}

void GetJobResponse::SharedDtor() {
  if (this != default_instance_) {
    delete job_;
  }
}

void GetJobResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetJobResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetJobResponse_descriptor_;
}

const GetJobResponse& GetJobResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_master_2eproto();
  return *default_instance_;
}

GetJobResponse* GetJobResponse::default_instance_ = NULL;

GetJobResponse* GetJobResponse::New() const {
  return new GetJobResponse;
}

void GetJobResponse::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    status_ = 0;
    if (has_job()) {
      if (job_ != NULL) job_->::dos::JobOverview::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetJobResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dos.GetJobResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .dos.RpcStatus status = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::dos::RpcStatus_IsValid(value)) {
            set_status(static_cast< ::dos::RpcStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_job;
        break;
      }

      // optional .dos.JobOverview job = 2;
      case 2: {
        if (tag == 18) {
         parse_job:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_job()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dos.GetJobResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dos.GetJobResponse)
  return false;
#undef DO_
}

void GetJobResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dos.GetJobResponse)
  // optional .dos.RpcStatus status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  // optional .dos.JobOverview job = 2;
  if (has_job()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->job(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dos.GetJobResponse)
}

::google::protobuf::uint8* GetJobResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dos.GetJobResponse)
  // optional .dos.RpcStatus status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  // optional .dos.JobOverview job = 2;
  if (has_job()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->job(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dos.GetJobResponse)
  return target;
}

int GetJobResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .dos.RpcStatus status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

    // optional .dos.JobOverview job = 2;
    if (has_job()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->job());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetJobResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetJobResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetJobResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetJobResponse::MergeFrom(const GetJobResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_job()) {
      mutable_job()->::dos::JobOverview::MergeFrom(from.job());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetJobResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetJobResponse::CopyFrom(const GetJobResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetJobResponse::IsInitialized() const {

  return true;
}

void GetJobResponse::Swap(GetJobResponse* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(job_, other->job_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetJobResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetJobResponse_descriptor_;
  metadata.reflection = GetJobResponse_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int KillJobRequest::kNameFieldNumber;
#endif  // !_MSC_VER

KillJobRequest::KillJobRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dos.KillJobRequest)
}

void KillJobRequest::InitAsDefaultInstance() {
}

KillJobRequest::KillJobRequest(const KillJobRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dos.KillJobRequest)
}

void KillJobRequest::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

KillJobRequest::~KillJobRequest() {
  // @@protoc_insertion_point(destructor:dos.KillJobRequest)
  SharedDtor();
}

void KillJobRequest::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void KillJobRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* KillJobRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return KillJobRequest_descriptor_;
}

const KillJobRequest& KillJobRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_master_2eproto();
  return *default_instance_;
}

KillJobRequest* KillJobRequest::default_instance_ = NULL;

KillJobRequest* KillJobRequest::New() const {
  return new KillJobRequest;
}

void KillJobRequest::Clear() {
  if (has_name()) {
    if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      name_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool KillJobRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dos.KillJobRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dos.KillJobRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dos.KillJobRequest)
  return false;
#undef DO_
}

void KillJobRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dos.KillJobRequest)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dos.KillJobRequest)
}

::google::protobuf::uint8* KillJobRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dos.KillJobRequest)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dos.KillJobRequest)
  return target;
}

int KillJobRequest::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void KillJobRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const KillJobRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const KillJobRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void KillJobRequest::MergeFrom(const KillJobRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void KillJobRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KillJobRequest::CopyFrom(const KillJobRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KillJobRequest::IsInitialized() const {

  return true;
}

void KillJobRequest::Swap(KillJobRequest* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata KillJobRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = KillJobRequest_descriptor_;
  metadata.reflection = KillJobRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int KillJobResponse::kStatusFieldNumber;
#endif  // !_MSC_VER

KillJobResponse::KillJobResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:dos.KillJobResponse)
}

void KillJobResponse::InitAsDefaultInstance() {
}

KillJobResponse::KillJobResponse(const KillJobResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:dos.KillJobResponse)
}

void KillJobResponse::SharedCtor() {
  _cached_size_ = 0;
  status_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

KillJobResponse::~KillJobResponse() {
  // @@protoc_insertion_point(destructor:dos.KillJobResponse)
  SharedDtor();
}

void KillJobResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void KillJobResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* KillJobResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return KillJobResponse_descriptor_;
}

const KillJobResponse& KillJobResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_master_2eproto();
  return *default_instance_;
}

KillJobResponse* KillJobResponse::default_instance_ = NULL;

KillJobResponse* KillJobResponse::New() const {
  return new KillJobResponse;
}

void KillJobResponse::Clear() {
  status_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool KillJobResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:dos.KillJobResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .dos.RpcStatus status = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::dos::RpcStatus_IsValid(value)) {
            set_status(static_cast< ::dos::RpcStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:dos.KillJobResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:dos.KillJobResponse)
  return false;
#undef DO_
}

void KillJobResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:dos.KillJobResponse)
  // optional .dos.RpcStatus status = 1;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->status(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:dos.KillJobResponse)
}

::google::protobuf::uint8* KillJobResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:dos.KillJobResponse)
  // optional .dos.RpcStatus status = 1;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->status(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dos.KillJobResponse)
  return target;
}

int KillJobResponse::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .dos.RpcStatus status = 1;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void KillJobResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const KillJobResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const KillJobResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void KillJobResponse::MergeFrom(const KillJobResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_status()) {
      set_status(from.status());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void KillJobResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KillJobResponse::CopyFrom(const KillJobResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KillJobResponse::IsInitialized() const {

  return true;
}

void KillJobResponse::Swap(KillJobResponse* other) {
  if (other != this) {
    std::swap(status_, other->status_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata KillJobResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = KillJobResponse_descriptor_;
  metadata.reflection = KillJobResponse_reflection_;
  return metadata;
}


// ===================================================================

Master::~Master() {}

const ::google::protobuf::ServiceDescriptor* Master::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Master_descriptor_;
}

const ::google::protobuf::ServiceDescriptor* Master::GetDescriptor() {
  protobuf_AssignDescriptorsOnce();
  return Master_descriptor_;
}

void Master::SubmitJob(::google::protobuf::RpcController* controller,
                         const ::dos::SubmitJobRequest*,
                         ::dos::SubmitJobResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method SubmitJob() not implemented.");
  done->Run();
}

void Master::HeartBeat(::google::protobuf::RpcController* controller,
                         const ::dos::HeartBeatRequest*,
                         ::dos::HeartBeatResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method HeartBeat() not implemented.");
  done->Run();
}

void Master::GetScaleUpPod(::google::protobuf::RpcController* controller,
                         const ::dos::GetScaleUpPodRequest*,
                         ::dos::GetScaleUpPodResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method GetScaleUpPod() not implemented.");
  done->Run();
}

void Master::SyncAgentInfo(::google::protobuf::RpcController* controller,
                         const ::dos::SyncAgentInfoRequest*,
                         ::dos::SyncAgentInfoResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method SyncAgentInfo() not implemented.");
  done->Run();
}

void Master::ScaleUpPropose(::google::protobuf::RpcController* controller,
                         const ::dos::ScaleUpProposeRequest*,
                         ::dos::ScaleUpProposeResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method ScaleUpPropose() not implemented.");
  done->Run();
}

void Master::GetJob(::google::protobuf::RpcController* controller,
                         const ::dos::GetJobRequest*,
                         ::dos::GetJobResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method GetJob() not implemented.");
  done->Run();
}

void Master::KillJob(::google::protobuf::RpcController* controller,
                         const ::dos::KillJobRequest*,
                         ::dos::KillJobResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method KillJob() not implemented.");
  done->Run();
}

void Master::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), Master_descriptor_);
  switch(method->index()) {
    case 0:
      SubmitJob(controller,
             ::google::protobuf::down_cast<const ::dos::SubmitJobRequest*>(request),
             ::google::protobuf::down_cast< ::dos::SubmitJobResponse*>(response),
             done);
      break;
    case 1:
      HeartBeat(controller,
             ::google::protobuf::down_cast<const ::dos::HeartBeatRequest*>(request),
             ::google::protobuf::down_cast< ::dos::HeartBeatResponse*>(response),
             done);
      break;
    case 2:
      GetScaleUpPod(controller,
             ::google::protobuf::down_cast<const ::dos::GetScaleUpPodRequest*>(request),
             ::google::protobuf::down_cast< ::dos::GetScaleUpPodResponse*>(response),
             done);
      break;
    case 3:
      SyncAgentInfo(controller,
             ::google::protobuf::down_cast<const ::dos::SyncAgentInfoRequest*>(request),
             ::google::protobuf::down_cast< ::dos::SyncAgentInfoResponse*>(response),
             done);
      break;
    case 4:
      ScaleUpPropose(controller,
             ::google::protobuf::down_cast<const ::dos::ScaleUpProposeRequest*>(request),
             ::google::protobuf::down_cast< ::dos::ScaleUpProposeResponse*>(response),
             done);
      break;
    case 5:
      GetJob(controller,
             ::google::protobuf::down_cast<const ::dos::GetJobRequest*>(request),
             ::google::protobuf::down_cast< ::dos::GetJobResponse*>(response),
             done);
      break;
    case 6:
      KillJob(controller,
             ::google::protobuf::down_cast<const ::dos::KillJobRequest*>(request),
             ::google::protobuf::down_cast< ::dos::KillJobResponse*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& Master::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::dos::SubmitJobRequest::default_instance();
    case 1:
      return ::dos::HeartBeatRequest::default_instance();
    case 2:
      return ::dos::GetScaleUpPodRequest::default_instance();
    case 3:
      return ::dos::SyncAgentInfoRequest::default_instance();
    case 4:
      return ::dos::ScaleUpProposeRequest::default_instance();
    case 5:
      return ::dos::GetJobRequest::default_instance();
    case 6:
      return ::dos::KillJobRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *reinterpret_cast< ::google::protobuf::Message*>(NULL);
  }
}

const ::google::protobuf::Message& Master::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::dos::SubmitJobResponse::default_instance();
    case 1:
      return ::dos::HeartBeatResponse::default_instance();
    case 2:
      return ::dos::GetScaleUpPodResponse::default_instance();
    case 3:
      return ::dos::SyncAgentInfoResponse::default_instance();
    case 4:
      return ::dos::ScaleUpProposeResponse::default_instance();
    case 5:
      return ::dos::GetJobResponse::default_instance();
    case 6:
      return ::dos::KillJobResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *reinterpret_cast< ::google::protobuf::Message*>(NULL);
  }
}

Master_Stub::Master_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
Master_Stub::Master_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
Master_Stub::~Master_Stub() {
  if (owns_channel_) delete channel_;
}

void Master_Stub::SubmitJob(::google::protobuf::RpcController* controller,
                              const ::dos::SubmitJobRequest* request,
                              ::dos::SubmitJobResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void Master_Stub::HeartBeat(::google::protobuf::RpcController* controller,
                              const ::dos::HeartBeatRequest* request,
                              ::dos::HeartBeatResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}
void Master_Stub::GetScaleUpPod(::google::protobuf::RpcController* controller,
                              const ::dos::GetScaleUpPodRequest* request,
                              ::dos::GetScaleUpPodResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(2),
                       controller, request, response, done);
}
void Master_Stub::SyncAgentInfo(::google::protobuf::RpcController* controller,
                              const ::dos::SyncAgentInfoRequest* request,
                              ::dos::SyncAgentInfoResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(3),
                       controller, request, response, done);
}
void Master_Stub::ScaleUpPropose(::google::protobuf::RpcController* controller,
                              const ::dos::ScaleUpProposeRequest* request,
                              ::dos::ScaleUpProposeResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(4),
                       controller, request, response, done);
}
void Master_Stub::GetJob(::google::protobuf::RpcController* controller,
                              const ::dos::GetJobRequest* request,
                              ::dos::GetJobResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(5),
                       controller, request, response, done);
}
void Master_Stub::KillJob(::google::protobuf::RpcController* controller,
                              const ::dos::KillJobRequest* request,
                              ::dos::KillJobResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(6),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)

}  // namespace dos

// @@protoc_insertion_point(global_scope)
